 From spam calling Name(
    value='spam',
    lpar=[],
    rpar=[],
)
 From spam calling Name(
    value='print',
    lpar=[],
    rpar=[],
)
 From spam calling Name(
    value='foo',
    lpar=[],
    rpar=[],
)
 From spam calling Name(
    value='print',
    lpar=[],
    rpar=[],
)
 From spam calling Name(
    value='bar',
    lpar=[],
    rpar=[],
)
 From spam calling Name(
    value='print',
    lpar=[],
    rpar=[],
)
 From spam calling Name(
    value='spam',
    lpar=[],
    rpar=[],
)
 From spam calling Name(
    value='print',
    lpar=[],
    rpar=[],
)
 From spam calling Name(
    value='foo',
    lpar=[],
    rpar=[],
)
 From spam calling Name(
    value='print',
    lpar=[],
    rpar=[],
)
 From spam calling Name(
    value='bar',
    lpar=[],
    rpar=[],
)
 From spam calling Name(
    value='print',
    lpar=[],
    rpar=[],
)
 From spam calling spam
 From spam calling print
 From spam calling foo
 From spam calling print
 From spam calling bar
 From spam calling print
 From spam calling spam
 From spam calling print
 From spam calling foo
 From spam calling print
 From spam calling bar
 From spam calling print
 From spam calling spam
 From spam calling print
 From spam calling foo
 From spam calling print
 From spam calling bar
 From spam calling print
 From spam calling spam
 From spam calling print
 From spam calling foo
 From foo calling print
 From foo calling bar
 From bar calling print
 From root module calling spam
 From root module calling print
 From spam calling foo
 From root module calling print
 From foo calling bar
 From bar calling print
 From root module calling spam
 From root module calling print
 From spam calling foo
 From root module calling print
 From foo calling bar
 From bar calling print
 From root module calling spam
 From spam calling print
 From spam calling foo
 From foo calling print
 From foo calling bar
 From bar calling print
 From root module calling spam
 From spam calling print
 From spam calling foo
 From foo calling print
 From foo calling bar
 From bar calling print
 From root module calling spam
 From spam calling print
 From spam calling foo
 From foo calling print
 From foo calling bar
 From bar calling print
-1: Execution started
6: Before function call
4: Attribute main of <module 'pytest' from '/home/eghbalaz/.pyenv/versions/dynap
5: Literal    value: /home/eghbalaz/Documents/PhD/Projects/pandas-copy/pandas/te
-1: Uncaught exception string() missing 1 required positional argument: 'val' <t
-1: Execution started
6: Before function call
4: Attribute main of <module 'pytest' from '/home/eghbalaz/.pyenv/versions/dynap
5: Literal    value: /home/eghbalaz/Documents/PhD/Projects/pandas-copy/pandas/te
1: Literal    value: restructuredtext
2:     Writing -> restructuredtext (old: [<dynapyt.utils.Dynapyt_Unidefined.Dyna
2: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
3: Literal    value: numpy
4: Literal    value: pytz
5: Literal    value: dateutil
6:     Writing -> ('numpy', 'pytz', 'dateutil') (old: [<dynapyt.utils.Dynapyt_Un
6: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
7:     Writing -> [] (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined 
7: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
8: Accessing -> ('numpy', 'pytz', 'dateutil')
8:     Reading -> ('numpy', 'pytz', 'dateutil')
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> numpy
10:     Reading -> numpy
11: After function call
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> pytz
10:     Reading -> pytz
11: After function call
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> dateutil
10:     Reading -> dateutil
11: After function call
-1: Uncaught exception _exit_ctrl_flow_() missing 1 required positional argument
6: After function call
-1: Execution ended
-1: Execution started
6: Before function call
4: Attribute main of <module 'pytest' from '/home/eghbalaz/.pyenv/versions/dynap
5: Literal    value: /home/eghbalaz/Documents/PhD/Projects/pandas-copy/pandas/te
1: Literal    value: restructuredtext
2:     Writing -> restructuredtext (old: [<dynapyt.utils.Dynapyt_Unidefined.Dyna
2: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
3: Literal    value: numpy
4: Literal    value: pytz
5: Literal    value: dateutil
6:     Writing -> ('numpy', 'pytz', 'dateutil') (old: [<dynapyt.utils.Dynapyt_Un
6: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
7:     Writing -> [] (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined 
7: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
8: Accessing -> ('numpy', 'pytz', 'dateutil')
8:     Reading -> ('numpy', 'pytz', 'dateutil')
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> numpy
10:     Reading -> numpy
11: After function call
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> pytz
10:     Reading -> pytz
11: After function call
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> dateutil
10:     Reading -> dateutil
11: After function call
19: Control-flow exit
20: Accessing -> []
20:     Reading -> []
29: Control-flow enter with condition []
30: Accessing -> (('numpy', 'pytz', 'dateutil'), 'dateutil', [])
30:     Deleting -> (('numpy', 'pytz', 'dateutil'), 'dateutil', [])
1: Literal    value: 
compat
======

Cross-compatible functions for different ve
11: Control-flow enter with condition False
12: Literal    value: ExtensionArray
13: Attribute ndarray of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dy
14: Slice ['ExtensionArray', <class 'numpy.ndarray'>] of typing.Union -> typing.
15:     Writing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray] (ol
15: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
16: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
16:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
17: Literal    value: Index
18: Literal    value: Series
19: Slice [typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray], 'Index', '
20:     Writing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, For
20: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
21: Slice [<class 'str'>, <class 'int'>, <class 'float'>, <class 'bool'>] of typ
22:     Writing -> typing.Union[str, int, float, bool] (old: [<dynapyt.utils.Dyn
22: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
23: Literal    value: Period
24: Literal    value: Timestamp
25: Literal    value: Timedelta
26: Slice ['Period', 'Timestamp', 'Timedelta'] of typing.Union -> typing.Union[F
27:     Writing -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), F
27: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
28: Literal    value: Period
29: Literal    value: Timestamp
30: Literal    value: Timedelta
31: Literal    value: Interval
32: Slice ['Period', 'Timestamp', 'Timedelta', 'Interval'] of typing.Union -> ty
33:     Writing -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), F
33: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
34: Accessing -> typing.Union[str, int, float, bool]
34:     Reading -> typing.Union[str, int, float, bool]
35: Accessing -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), For
35:     Reading -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), F
36: Slice [typing.Union[str, int, float, bool], typing.Union[ForwardRef('Period'
37:     Writing -> typing.Union[str, int, float, bool, ForwardRef('Period'), For
37: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
39: Before function call
38: Literal    value: IntStrT
39: After function call
40:     Writing -> ~IntStrT (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Und
40: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
41: Literal    value: Timestamp
42: Attribute datetime64 of <module 'numpy' from '/home/eghbalaz/.pyenv/versions
43: Attribute int64 of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyna
44: Slice ['Timestamp', <class 'datetime.datetime'>, <class 'numpy.datetime64'>,
45:     Writing -> typing.Union[ForwardRef('Timestamp'), datetime.datetime, nump
45: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
46: Literal    value: Timedelta
47: Attribute timedelta64 of <module 'numpy' from '/home/eghbalaz/.pyenv/version
48: Attribute int64 of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyna
49: Slice ['Timedelta', <class 'datetime.timedelta'>, <class 'numpy.timedelta64'
50:     Writing -> typing.Union[ForwardRef('Timedelta'), datetime.timedelta, num
50: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
51: Slice [<class 'str'>, <class 'datetime.tzinfo'>] of typing.Union -> typing.U
52:     Writing -> typing.Union[str, datetime.tzinfo] (old: [<dynapyt.utils.Dyna
52: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
55: Before function call
53: Literal    value: NDFrameT
54: Literal    value: NDFrame
55: After function call
56:     Writing -> ~NDFrameT (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Un
56: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
57: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, in
58:     Writing -> typing.Union[str, int] (old: [<dynapyt.utils.Dynapyt_Unidefin
58: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
59: Slice [typing.Hashable] of typing.Sequence -> typing.Sequence[typing.Hashabl
60: Slice [typing.Hashable, typing.Sequence[typing.Hashable]] of typing.Union ->
61:     Writing -> typing.Union[typing.Hashable, typing.Sequence[typing.Hashable
61: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
62: Slice [typing.Hashable, <class 'int'>] of typing.Union -> typing.Union[typin
63:     Writing -> typing.Union[typing.Hashable, int] (old: [<dynapyt.utils.Dyna
63: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
64: Slice [<class 'int'>, Ellipsis] of typing.Tuple -> typing.Tuple[int, ...]
65:     Writing -> typing.Tuple[int, ...] (old: [<dynapyt.utils.Dynapyt_Unidefin
65: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
66: Slice [<class 'str'>] of typing.Optional -> typing.Optional[str]
67: Slice [<class 'str'>] of typing.Optional -> typing.Optional[str]
68: Slice [typing.Optional[str], typing.Optional[str]] of typing.Tuple -> typing
69:     Writing -> typing.Tuple[typing.Optional[str], typing.Optional[str]] (old
69: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
70: Slice [<class 'bool'>] of typing.Optional -> typing.Optional[bool]
71:     Writing -> typing.Optional[bool] (old: [<dynapyt.utils.Dynapyt_Unidefine
71: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
72: Accessing -> typing.Union[str, int, float, bool]
72:     Reading -> typing.Union[str, int, float, bool]
73: Slice [typing.Union[str, int, float, bool], typing.List, typing.Dict] of typ
74: Slice [typing.Union[str, int, float, bool, typing.List, typing.Dict]] of typ
75:     Writing -> typing.Union[str, int, float, bool, typing.List, typing.Dict,
75: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
76: Literal    value: DateOffset
77: Slice [<class 'str'>, 'DateOffset'] of typing.Union -> typing.Union[str, For
78:     Writing -> typing.Union[str, ForwardRef('DateOffset')] (old: [<dynapyt.u
78: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
79: Slice [typing.Any] of typing.Collection -> typing.Collection[typing.Any]
80:     Writing -> typing.Collection[typing.Any] (old: [<dynapyt.utils.Dynapyt_U
80: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
81: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
81:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
82: Attribute random of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
83: Attribute Generator of <module 'numpy.random' from '/home/eghbalaz/.pyenv/ve
84: Attribute random of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
85: Attribute BitGenerator of <module 'numpy.random' from '/home/eghbalaz/.pyenv
86: Attribute random of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
87: Attribute RandomState of <module 'numpy.random' from '/home/eghbalaz/.pyenv/
88: Slice [<class 'int'>, typing.Union[ForwardRef('ExtensionArray'), numpy.ndarr
89:     Writing -> typing.Union[int, ForwardRef('ExtensionArray'), numpy.ndarray
89: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
90: Attribute dtype of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyna
91: Slice [<class 'str'>, <class 'float'>, <class 'int'>, <class 'complex'>, <cl
92: Slice [typing.Union[str, float, int, complex, bool, object]] of typing.Type 
93: Slice [<class 'str'>, <class 'numpy.dtype'>, typing.Type[typing.Union[str, f
94:     Writing -> typing.Union[str, numpy.dtype, typing.Type[typing.Union[str, 
94: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
95: Literal    value: ExtensionDtype
96: Accessing -> typing.Union[str, numpy.dtype, typing.Type[typing.Union[str, fl
96:     Reading -> typing.Union[str, numpy.dtype, typing.Type[typing.Union[str, 
97: Slice ['ExtensionDtype', typing.Union[str, numpy.dtype, typing.Type[typing.U
98:     Writing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, 
98: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
99: Literal    value: ExtensionDtype
100: Literal    value: npt.DTypeLike
101: Slice ['ExtensionDtype', 'npt.DTypeLike'] of typing.Union -> typing.Union[F
102:     Writing -> typing.Union[ForwardRef('ExtensionDtype'), ForwardRef('npt.D
102: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
103: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
103:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
104: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
104:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
105: Slice [typing.Hashable, typing.Union[ForwardRef('ExtensionDtype'), str, num
106: Slice [typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, typing.
107:     Writing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
107: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
108: Attribute dtype of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
109: Literal    value: ExtensionDtype
110: Slice [<class 'numpy.dtype'>, 'ExtensionDtype'] of typing.Union -> typing.U
111:     Writing -> typing.Union[numpy.dtype, ForwardRef('ExtensionDtype')] (old
111: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
112: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
112:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
113: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
113:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
114: Slice [[typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, typing
115: Slice [typing.Hashable, typing.Callable[[typing.Union[ForwardRef('Extension
116:     Writing -> typing.Dict[typing.Hashable, typing.Callable[[typing.Union[F
116: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
117: Slice [typing.Hashable] of typing.List -> typing.List[typing.Hashable]
118: Slice [typing.Hashable] of typing.List -> typing.List[typing.Hashable]
119: Slice [typing.List[typing.Hashable]] of typing.List -> typing.List[typing.L
120: Slice [typing.Hashable] of typing.List -> typing.List[typing.Hashable]
121: Slice [typing.Hashable, typing.List[typing.Hashable]] of typing.Dict -> typ
122: Slice [<class 'bool'>, typing.List[typing.Hashable], typing.List[typing.Lis
123:     Writing -> typing.Union[bool, typing.List[typing.Hashable], typing.List
123: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
124: Slice [typing.Hashable, typing.Any] of typing.Mapping -> typing.Mapping[typ
125: Slice [[typing.Hashable], typing.Hashable] of typing.Callable -> typing.Cal
126: Slice [typing.Mapping[typing.Hashable, typing.Any], typing.Callable[[typing
127:     Writing -> typing.Union[typing.Mapping[typing.Hashable, typing.Any], ty
127: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
129: Before function call
128: Literal    value: T
129: After function call
130:     Writing -> ~T (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefine
130: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
131: Slice [Ellipsis, typing.Any] of typing.Callable -> typing.Callable[..., typ
132:     Writing -> typing.Callable[..., typing.Any] (old: [<dynapyt.utils.Dynap
132: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
135: Before function call
133: Literal    value: F
134: Accessing -> typing.Callable[..., typing.Any]
134:     Reading -> typing.Callable[..., typing.Any]
135: After function call
136:     Writing -> ~F (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefine
136: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
137: Literal    value: Series
138: Literal    value: Series
139: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Forw
139:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Fo
140: Slice ['Series', typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, 
141: Slice [['Series'], typing.Union[ForwardRef('Series'), ForwardRef('Extension
142: Slice [typing.Callable[[ForwardRef('Series')], typing.Union[ForwardRef('Ser
143:     Writing -> typing.Optional[typing.Callable[[ForwardRef('Series')], typi
143: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
144: Literal    value: Index
145: Literal    value: Index
146: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Forw
146:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Fo
147: Slice ['Index', typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, F
148: Slice [['Index'], typing.Union[ForwardRef('Index'), ForwardRef('ExtensionAr
149: Slice [typing.Callable[[ForwardRef('Index')], typing.Union[ForwardRef('Inde
150:     Writing -> typing.Optional[typing.Callable[[ForwardRef('Index')], typin
150: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
151: Slice [typing.Callable, <class 'str'>] of typing.Union -> typing.Union[typi
152:     Writing -> typing.Union[typing.Callable, str] (old: [<dynapyt.utils.Dyn
152: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
153: Accessing -> typing.Union[typing.Callable, str]
153:     Reading -> typing.Union[typing.Callable, str]
154: Accessing -> typing.Union[typing.Callable, str]
154:     Reading -> typing.Union[typing.Callable, str]
155: Slice [typing.Union[typing.Callable, str]] of typing.List -> typing.List[ty
156: Slice [typing.Union[typing.Callable, str], typing.List[typing.Union[typing.
157: Slice [typing.Hashable, typing.Union[typing.Callable, str, typing.List[typi
158:     Writing -> typing.Dict[typing.Hashable, typing.Union[typing.Callable, s
158: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
159: Accessing -> typing.Union[typing.Callable, str]
159:     Reading -> typing.Union[typing.Callable, str]
160: Accessing -> typing.Union[typing.Callable, str]
160:     Reading -> typing.Union[typing.Callable, str]
161: Slice [typing.Union[typing.Callable, str]] of typing.List -> typing.List[ty
162: Accessing -> typing.Dict[typing.Hashable, typing.Union[typing.Callable, str
162:     Reading -> typing.Dict[typing.Hashable, typing.Union[typing.Callable, s
163: Slice [typing.Union[typing.Callable, str], typing.List[typing.Union[typing.
164:     Writing -> typing.Union[typing.Callable, str, typing.List[typing.Union[
164: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
165: Literal    value: Series
166: Literal    value: DataFrame
167: Literal    value: GroupBy
168: Literal    value: SeriesGroupBy
169: Literal    value: DataFrameGroupBy
170: Literal    value: BaseWindow
171: Literal    value: Resampler
172: Slice ['Series', 'DataFrame', 'GroupBy', 'SeriesGroupBy', 'DataFrameGroupBy
173:     Writing -> typing.Union[ForwardRef('Series'), ForwardRef('DataFrame'), 
173: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
174: Slice [[typing.Any], typing.Any] of typing.Callable -> typing.Callable[[typ
175:     Writing -> typing.Callable[[typing.Any], typing.Any] (old: [<dynapyt.ut
175: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
178: Before function call
176: Literal    value: AnyStr_cov
177: Literal    value: True
178: After function call
179:     Writing -> +AnyStr_cov (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt
179: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
182: Before function call
180: Literal    value: AnyStr_con
181: Literal    value: True
182: After function call
183:     Writing -> -AnyStr_con (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt
183: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
189: Accessing -> <class 'pandas._typing.BaseBuffer'>
189:     Reading -> <class 'pandas._typing.BaseBuffer'>
190: Accessing -> +AnyStr_cov
190:     Reading -> +AnyStr_cov
191: Slice [+AnyStr_cov] of <class 'typing.Protocol'> -> typing.Protocol[+AnyStr
195: Accessing -> <class 'pandas._typing.BaseBuffer'>
195:     Reading -> <class 'pandas._typing.BaseBuffer'>
196: Accessing -> -AnyStr_con
196:     Reading -> -AnyStr_con
197: Slice [-AnyStr_con] of <class 'typing.Protocol'> -> typing.Protocol[-AnyStr
201: Accessing -> <class 'pandas._typing.ReadBuffer'>
201:     Reading -> <class 'pandas._typing.ReadBuffer'>
202: Slice [<class 'bytes'>] of <class 'pandas._typing.ReadBuffer'> -> pandas._t
205: Accessing -> <class 'pandas._typing.WriteBuffer'>
205:     Reading -> <class 'pandas._typing.WriteBuffer'>
206: Slice [<class 'bytes'>] of <class 'pandas._typing.WriteBuffer'> -> pandas._
209: Accessing -> <class 'pandas._typing.ReadBuffer'>
209:     Reading -> <class 'pandas._typing.ReadBuffer'>
210: Accessing -> +AnyStr_cov
210:     Reading -> +AnyStr_cov
211: Slice [+AnyStr_cov] of <class 'pandas._typing.ReadBuffer'> -> pandas._typin
218: Literal    value: PathLike[str]
219: Slice [<class 'str'>, 'PathLike[str]'] of typing.Union -> typing.Union[str,
220:     Writing -> typing.Union[str, ForwardRef('PathLike[str]')] (old: [<dynap
220: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
221: Slice [<class 'str'>, typing.Any] of typing.Dict -> typing.Dict[str, typing
222: Slice [typing.Dict[str, typing.Any]] of typing.Optional -> typing.Optional[
223:     Writing -> typing.Optional[typing.Dict[str, typing.Any]] (old: [<dynapy
223: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
224: Slice [<class 'str'>, typing.Any] of typing.Dict -> typing.Dict[str, typing
225:     Writing -> typing.Dict[str, typing.Any] (old: [<dynapyt.utils.Dynapyt_U
225: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
226: Literal    value: infer
227: Literal    value: gzip
228: Literal    value: bz2
229: Literal    value: zip
230: Literal    value: xz
231: Literal    value: zstd
232: Slice ['infer', 'gzip', 'bz2', 'zip', 'xz', 'zstd'] of typing.Literal -> ty
233: Accessing -> typing.Dict[str, typing.Any]
233:     Reading -> typing.Dict[str, typing.Any]
234: Slice [typing.Literal['infer', 'gzip', 'bz2', 'zip', 'xz', 'zstd'], typing.
235: Slice [typing.Union[typing.Literal['infer', 'gzip', 'bz2', 'zip', 'xz', 'zs
236:     Writing -> typing.Union[typing.Literal['infer', 'gzip', 'bz2', 'zip', '
236: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
237: Slice [typing.Callable] of typing.List -> typing.List[typing.Callable]
238: Slice [typing.Callable, Ellipsis] of typing.Tuple -> typing.Tuple[typing.Ca
239: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
240: Slice [typing.Union[str, int], typing.Callable] of typing.Mapping -> typing
241: Slice [typing.List[typing.Callable], typing.Tuple[typing.Callable, ...], ty
242:     Writing -> typing.Union[typing.List[typing.Callable], typing.Tuple[typi
242: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
243: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
244: Slice [typing.Hashable, typing.Union[str, int]] of typing.Mapping -> typing
245:     Writing -> typing.Mapping[typing.Hashable, typing.Union[str, int]] (old
245: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
246: Literal    value: EngFormatter
247: Slice [<class 'str'>, typing.Callable, 'EngFormatter'] of typing.Union -> t
248:     Writing -> typing.Union[str, typing.Callable, ForwardRef('EngFormatter'
248: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
249: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
250: Slice [typing.Union[str, int]] of typing.Sequence -> typing.Sequence[typing
251: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
252: Slice [typing.Hashable, typing.Union[str, int]] of typing.Mapping -> typing
253: Slice [<class 'str'>, <class 'int'>, typing.Sequence[typing.Union[str, int]
254:     Writing -> typing.Union[str, int, typing.Sequence[typing.Union[str, int
254: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
255: Literal    value: backfill
256: Literal    value: bfill
257: Literal    value: ffill
258: Literal    value: pad
259: Slice ['backfill', 'bfill', 'ffill', 'pad'] of typing.Literal -> typing.Lit
260:     Writing -> typing.Literal['backfill', 'bfill', 'ffill', 'pad'] (old: [<
260: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
261: Literal    value: ArrayManager
262: Literal    value: SingleArrayManager
263: Literal    value: BlockManager
264: Literal    value: SingleBlockManager
265: Slice ['ArrayManager', 'SingleArrayManager', 'BlockManager', 'SingleBlockMa
266:     Writing -> typing.Union[ForwardRef('ArrayManager'), ForwardRef('SingleA
266: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
267: Literal    value: SingleArrayManager
268: Literal    value: SingleBlockManager
269: Slice ['SingleArrayManager', 'SingleBlockManager'] of typing.Union -> typin
270:     Writing -> typing.Union[ForwardRef('SingleArrayManager'), ForwardRef('S
270: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
271: Literal    value: ArrayManager
272: Literal    value: BlockManager
273: Slice ['ArrayManager', 'BlockManager'] of typing.Union -> typing.Union[Forw
274:     Writing -> typing.Union[ForwardRef('ArrayManager'), ForwardRef('BlockMa
274: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
275: Attribute integer of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/d
276: Slice [<class 'int'>, <class 'numpy.integer'>] of typing.Union -> typing.Un
277:     Writing -> typing.Union[int, numpy.integer] (old: [<dynapyt.utils.Dynap
277: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
278: Slice [<class 'int'>] of typing.List -> typing.List[int]
279: Attribute ndarray of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/d
280: Slice [<class 'slice'>, typing.List[int], <class 'numpy.ndarray'>] of typin
281:     Writing -> typing.Union[slice, typing.List[int], numpy.ndarray] (old: [
281: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
282: Accessing -> typing.Union[int, numpy.integer]
282:     Reading -> typing.Union[int, numpy.integer]
283: Accessing -> typing.Union[slice, typing.List[int], numpy.ndarray]
283:     Reading -> typing.Union[slice, typing.List[int], numpy.ndarray]
284: Slice [typing.Union[int, numpy.integer], typing.Union[slice, typing.List[in
285:     Writing -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
285: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
286: Accessing -> typing.Union[int, numpy.integer, slice, typing.List[int], nump
286:     Reading -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
287: Accessing -> typing.Union[int, numpy.integer, slice, typing.List[int], nump
287:     Reading -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
288: Slice [typing.Union[int, numpy.integer, slice, typing.List[int], numpy.ndar
289:     Writing -> typing.Tuple[typing.Union[int, numpy.integer, slice, typing.
289: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
290: Accessing -> typing.Union[int, numpy.integer, slice, typing.List[int], nump
290:     Reading -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
291: Accessing -> typing.Tuple[typing.Union[int, numpy.integer, slice, typing.Li
291:     Reading -> typing.Tuple[typing.Union[int, numpy.integer, slice, typing.
292: Slice [typing.Union[int, numpy.integer, slice, typing.List[int], numpy.ndar
293:     Writing -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
293: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
304: Control-flow enter with condition False
303:     Writing -> typing.Any (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_
303: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
305: Literal    value: average
306: Literal    value: min
307: Literal    value: max
308: Slice ['average', 'min', 'max'] of typing.Literal -> typing.Literal['averag
309:     Writing -> typing.Literal['average', 'min', 'max'] (old: [<dynapyt.util
309: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
310: Literal    value: c
311: Literal    value: python
312: Literal    value: pyarrow
313: Literal    value: python-fwf
314: Slice ['c', 'python', 'pyarrow', 'python-fwf'] of typing.Literal -> typing.
315:     Writing -> typing.Literal['c', 'python', 'pyarrow', 'python-fwf'] (old:
315: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
316: Literal    value: lxml
317: Literal    value: etree
318: Slice ['lxml', 'etree'] of typing.Literal -> typing.Literal['lxml', 'etree'
319:     Writing -> typing.Literal['lxml', 'etree'] (old: [<dynapyt.utils.Dynapy
319: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
1: Literal    value:  support numpy compatibility across versions 
1: Literal    value: NaT
2: Literal    value: NaTType
3: Literal    value: OutOfBoundsDatetime
4: Literal    value: Period
5: Literal    value: Timedelta
6: Literal    value: Timestamp
7: Literal    value: iNaT
8: Literal    value: Interval
9:     Writing -> ['NaT', 'NaTType', 'OutOfBoundsDatetime', 'Period', 'Timedelta
9: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
1: Literal    value: dtypes
2: Literal    value: localize_pydatetime
3: Literal    value: NaT
4: Literal    value: NaTType
5: Literal    value: iNaT
6: Literal    value: nat_strings
7: Literal    value: OutOfBoundsDatetime
8: Literal    value: OutOfBoundsTimedelta
9: Literal    value: IncompatibleFrequency
10: Literal    value: Period
11: Literal    value: Resolution
12: Literal    value: Timedelta
13: Literal    value: normalize_i8_timestamps
14: Literal    value: is_date_array_normalized
15: Literal    value: dt64arr_to_periodarr
16: Literal    value: delta_to_nanoseconds
17: Literal    value: ints_to_pydatetime
18: Literal    value: ints_to_pytimedelta
19: Literal    value: get_resolution
20: Literal    value: Timestamp
21: Literal    value: tz_convert_from_utc_single
22: Literal    value: to_offset
23: Literal    value: Tick
24: Literal    value: BaseOffset
25: Literal    value: tz_compare
26:     Writing -> ['dtypes', 'localize_pydatetime', 'NaT', 'NaTType', 'iNaT', '
26: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
1: Literal    value: 
pandas._config is considered explicitly upstream of everyt
2: Literal    value: config
3: Literal    value: detect_console_encoding
4: Literal    value: get_option
5: Literal    value: set_option
6: Literal    value: reset_option
7: Literal    value: describe_option
8: Literal    value: option_context
9: Literal    value: options
10:     Writing -> ['config', 'detect_console_encoding', 'get_option', 'set_opti
10: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
-1: Uncaught exception from __future__ imports must occur at the beginning of th
-1: Uncaught exception from __future__ imports must occur at the beginning of th
-1: Uncaught exception from __future__ imports must occur at the beginning of th
-1: Uncaught exception from __future__ imports must occur at the beginning of th
-1: Uncaught exception from __future__ imports must occur at the beginning of th
-1: Uncaught exception from __future__ imports must occur at the beginning of th
-1: Uncaught exception from __future__ imports must occur at the beginning of th
-1: Uncaught exception from __future__ imports must occur at the beginning of th
6: After function call
-1: Execution ended
-1: Execution started
6: Before function call
4: Attribute main of <module 'pytest' from '/home/eghbalaz/.pyenv/versions/dynap
5: Literal    value: /home/eghbalaz/Documents/PhD/Projects/pandas-copy/pandas/te
1: Literal    value: restructuredtext
2:     Writing -> restructuredtext (old: [<dynapyt.utils.Dynapyt_Unidefined.Dyna
2: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
3: Literal    value: numpy
4: Literal    value: pytz
5: Literal    value: dateutil
6:     Writing -> ('numpy', 'pytz', 'dateutil') (old: [<dynapyt.utils.Dynapyt_Un
6: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
7:     Writing -> [] (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined 
7: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
8: Accessing -> ('numpy', 'pytz', 'dateutil')
8:     Reading -> ('numpy', 'pytz', 'dateutil')
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> numpy
10:     Reading -> numpy
11: After function call
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> pytz
10:     Reading -> pytz
11: After function call
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> dateutil
10:     Reading -> dateutil
11: After function call
19: Control-flow exit
20: Accessing -> []
20:     Reading -> []
29: Control-flow enter with condition []
30: Accessing -> (('numpy', 'pytz', 'dateutil'), 'dateutil', [])
30:     Deleting -> (('numpy', 'pytz', 'dateutil'), 'dateutil', [])
8: Control-flow enter with condition False
9: Literal    value: ExtensionArray
10: Attribute ndarray of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dy
11: Slice ['ExtensionArray', <class 'numpy.ndarray'>] of typing.Union -> typing.
12:     Writing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray] (ol
12: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
13: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
13:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
14: Literal    value: Index
15: Literal    value: Series
16: Slice [typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray], 'Index', '
17:     Writing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, For
17: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
18: Slice [<class 'str'>, <class 'int'>, <class 'float'>, <class 'bool'>] of typ
19:     Writing -> typing.Union[str, int, float, bool] (old: [<dynapyt.utils.Dyn
19: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
20: Literal    value: Period
21: Literal    value: Timestamp
22: Literal    value: Timedelta
23: Slice ['Period', 'Timestamp', 'Timedelta'] of typing.Union -> typing.Union[F
24:     Writing -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), F
24: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
25: Literal    value: Period
26: Literal    value: Timestamp
27: Literal    value: Timedelta
28: Literal    value: Interval
29: Slice ['Period', 'Timestamp', 'Timedelta', 'Interval'] of typing.Union -> ty
30:     Writing -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), F
30: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
31: Accessing -> typing.Union[str, int, float, bool]
31:     Reading -> typing.Union[str, int, float, bool]
32: Accessing -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), For
32:     Reading -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), F
33: Slice [typing.Union[str, int, float, bool], typing.Union[ForwardRef('Period'
34:     Writing -> typing.Union[str, int, float, bool, ForwardRef('Period'), For
34: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
36: Before function call
35: Literal    value: IntStrT
36: After function call
37:     Writing -> ~IntStrT (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Und
37: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
38: Literal    value: Timestamp
39: Attribute datetime64 of <module 'numpy' from '/home/eghbalaz/.pyenv/versions
40: Attribute int64 of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyna
41: Slice ['Timestamp', <class 'datetime.datetime'>, <class 'numpy.datetime64'>,
42:     Writing -> typing.Union[ForwardRef('Timestamp'), datetime.datetime, nump
42: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
43: Literal    value: Timedelta
44: Attribute timedelta64 of <module 'numpy' from '/home/eghbalaz/.pyenv/version
45: Attribute int64 of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyna
46: Slice ['Timedelta', <class 'datetime.timedelta'>, <class 'numpy.timedelta64'
47:     Writing -> typing.Union[ForwardRef('Timedelta'), datetime.timedelta, num
47: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
48: Slice [<class 'str'>, <class 'datetime.tzinfo'>] of typing.Union -> typing.U
49:     Writing -> typing.Union[str, datetime.tzinfo] (old: [<dynapyt.utils.Dyna
49: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
52: Before function call
50: Literal    value: NDFrameT
51: Literal    value: NDFrame
52: After function call
53:     Writing -> ~NDFrameT (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Un
53: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
54: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, in
55:     Writing -> typing.Union[str, int] (old: [<dynapyt.utils.Dynapyt_Unidefin
55: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
56: Slice [typing.Hashable] of typing.Sequence -> typing.Sequence[typing.Hashabl
57: Slice [typing.Hashable, typing.Sequence[typing.Hashable]] of typing.Union ->
58:     Writing -> typing.Union[typing.Hashable, typing.Sequence[typing.Hashable
58: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
59: Slice [typing.Hashable, <class 'int'>] of typing.Union -> typing.Union[typin
60:     Writing -> typing.Union[typing.Hashable, int] (old: [<dynapyt.utils.Dyna
60: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
61: Slice [<class 'int'>, Ellipsis] of typing.Tuple -> typing.Tuple[int, ...]
62:     Writing -> typing.Tuple[int, ...] (old: [<dynapyt.utils.Dynapyt_Unidefin
62: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
63: Slice [<class 'str'>] of typing.Optional -> typing.Optional[str]
64: Slice [<class 'str'>] of typing.Optional -> typing.Optional[str]
65: Slice [typing.Optional[str], typing.Optional[str]] of typing.Tuple -> typing
66:     Writing -> typing.Tuple[typing.Optional[str], typing.Optional[str]] (old
66: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
67: Slice [<class 'bool'>] of typing.Optional -> typing.Optional[bool]
68:     Writing -> typing.Optional[bool] (old: [<dynapyt.utils.Dynapyt_Unidefine
68: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
69: Accessing -> typing.Union[str, int, float, bool]
69:     Reading -> typing.Union[str, int, float, bool]
70: Slice [typing.Union[str, int, float, bool], typing.List, typing.Dict] of typ
71: Slice [typing.Union[str, int, float, bool, typing.List, typing.Dict]] of typ
72:     Writing -> typing.Union[str, int, float, bool, typing.List, typing.Dict,
72: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
73: Literal    value: DateOffset
74: Slice [<class 'str'>, 'DateOffset'] of typing.Union -> typing.Union[str, For
75:     Writing -> typing.Union[str, ForwardRef('DateOffset')] (old: [<dynapyt.u
75: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
76: Slice [typing.Any] of typing.Collection -> typing.Collection[typing.Any]
77:     Writing -> typing.Collection[typing.Any] (old: [<dynapyt.utils.Dynapyt_U
77: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
78: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
78:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
79: Attribute random of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
80: Attribute Generator of <module 'numpy.random' from '/home/eghbalaz/.pyenv/ve
81: Attribute random of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
82: Attribute BitGenerator of <module 'numpy.random' from '/home/eghbalaz/.pyenv
83: Attribute random of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
84: Attribute RandomState of <module 'numpy.random' from '/home/eghbalaz/.pyenv/
85: Slice [<class 'int'>, typing.Union[ForwardRef('ExtensionArray'), numpy.ndarr
86:     Writing -> typing.Union[int, ForwardRef('ExtensionArray'), numpy.ndarray
86: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
87: Attribute dtype of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyna
88: Slice [<class 'str'>, <class 'float'>, <class 'int'>, <class 'complex'>, <cl
89: Slice [typing.Union[str, float, int, complex, bool, object]] of typing.Type 
90: Slice [<class 'str'>, <class 'numpy.dtype'>, typing.Type[typing.Union[str, f
91:     Writing -> typing.Union[str, numpy.dtype, typing.Type[typing.Union[str, 
91: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
92: Literal    value: ExtensionDtype
93: Accessing -> typing.Union[str, numpy.dtype, typing.Type[typing.Union[str, fl
93:     Reading -> typing.Union[str, numpy.dtype, typing.Type[typing.Union[str, 
94: Slice ['ExtensionDtype', typing.Union[str, numpy.dtype, typing.Type[typing.U
95:     Writing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, 
95: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
96: Literal    value: ExtensionDtype
97: Literal    value: npt.DTypeLike
98: Slice ['ExtensionDtype', 'npt.DTypeLike'] of typing.Union -> typing.Union[Fo
99:     Writing -> typing.Union[ForwardRef('ExtensionDtype'), ForwardRef('npt.DT
99: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
100: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
100:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
101: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
101:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
102: Slice [typing.Hashable, typing.Union[ForwardRef('ExtensionDtype'), str, num
103: Slice [typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, typing.
104:     Writing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
104: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
105: Attribute dtype of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
106: Literal    value: ExtensionDtype
107: Slice [<class 'numpy.dtype'>, 'ExtensionDtype'] of typing.Union -> typing.U
108:     Writing -> typing.Union[numpy.dtype, ForwardRef('ExtensionDtype')] (old
108: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
109: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
109:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
110: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
110:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
111: Slice [[typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, typing
112: Slice [typing.Hashable, typing.Callable[[typing.Union[ForwardRef('Extension
113:     Writing -> typing.Dict[typing.Hashable, typing.Callable[[typing.Union[F
113: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
114: Slice [typing.Hashable] of typing.List -> typing.List[typing.Hashable]
115: Slice [typing.Hashable] of typing.List -> typing.List[typing.Hashable]
116: Slice [typing.List[typing.Hashable]] of typing.List -> typing.List[typing.L
117: Slice [typing.Hashable] of typing.List -> typing.List[typing.Hashable]
118: Slice [typing.Hashable, typing.List[typing.Hashable]] of typing.Dict -> typ
119: Slice [<class 'bool'>, typing.List[typing.Hashable], typing.List[typing.Lis
120:     Writing -> typing.Union[bool, typing.List[typing.Hashable], typing.List
120: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
121: Slice [typing.Hashable, typing.Any] of typing.Mapping -> typing.Mapping[typ
122: Slice [[typing.Hashable], typing.Hashable] of typing.Callable -> typing.Cal
123: Slice [typing.Mapping[typing.Hashable, typing.Any], typing.Callable[[typing
124:     Writing -> typing.Union[typing.Mapping[typing.Hashable, typing.Any], ty
124: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
126: Before function call
125: Literal    value: T
126: After function call
127:     Writing -> ~T (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefine
127: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
128: Slice [Ellipsis, typing.Any] of typing.Callable -> typing.Callable[..., typ
129:     Writing -> typing.Callable[..., typing.Any] (old: [<dynapyt.utils.Dynap
129: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
132: Before function call
130: Literal    value: F
131: Accessing -> typing.Callable[..., typing.Any]
131:     Reading -> typing.Callable[..., typing.Any]
132: After function call
133:     Writing -> ~F (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefine
133: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
134: Literal    value: Series
135: Literal    value: Series
136: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Forw
136:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Fo
137: Slice ['Series', typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, 
138: Slice [['Series'], typing.Union[ForwardRef('Series'), ForwardRef('Extension
139: Slice [typing.Callable[[ForwardRef('Series')], typing.Union[ForwardRef('Ser
140:     Writing -> typing.Optional[typing.Callable[[ForwardRef('Series')], typi
140: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
141: Literal    value: Index
142: Literal    value: Index
143: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Forw
143:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Fo
144: Slice ['Index', typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, F
145: Slice [['Index'], typing.Union[ForwardRef('Index'), ForwardRef('ExtensionAr
146: Slice [typing.Callable[[ForwardRef('Index')], typing.Union[ForwardRef('Inde
147:     Writing -> typing.Optional[typing.Callable[[ForwardRef('Index')], typin
147: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
148: Slice [typing.Callable, <class 'str'>] of typing.Union -> typing.Union[typi
149:     Writing -> typing.Union[typing.Callable, str] (old: [<dynapyt.utils.Dyn
149: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
150: Accessing -> typing.Union[typing.Callable, str]
150:     Reading -> typing.Union[typing.Callable, str]
151: Accessing -> typing.Union[typing.Callable, str]
151:     Reading -> typing.Union[typing.Callable, str]
152: Slice [typing.Union[typing.Callable, str]] of typing.List -> typing.List[ty
153: Slice [typing.Union[typing.Callable, str], typing.List[typing.Union[typing.
154: Slice [typing.Hashable, typing.Union[typing.Callable, str, typing.List[typi
155:     Writing -> typing.Dict[typing.Hashable, typing.Union[typing.Callable, s
155: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
156: Accessing -> typing.Union[typing.Callable, str]
156:     Reading -> typing.Union[typing.Callable, str]
157: Accessing -> typing.Union[typing.Callable, str]
157:     Reading -> typing.Union[typing.Callable, str]
158: Slice [typing.Union[typing.Callable, str]] of typing.List -> typing.List[ty
159: Accessing -> typing.Dict[typing.Hashable, typing.Union[typing.Callable, str
159:     Reading -> typing.Dict[typing.Hashable, typing.Union[typing.Callable, s
160: Slice [typing.Union[typing.Callable, str], typing.List[typing.Union[typing.
161:     Writing -> typing.Union[typing.Callable, str, typing.List[typing.Union[
161: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
162: Literal    value: Series
163: Literal    value: DataFrame
164: Literal    value: GroupBy
165: Literal    value: SeriesGroupBy
166: Literal    value: DataFrameGroupBy
167: Literal    value: BaseWindow
168: Literal    value: Resampler
169: Slice ['Series', 'DataFrame', 'GroupBy', 'SeriesGroupBy', 'DataFrameGroupBy
170:     Writing -> typing.Union[ForwardRef('Series'), ForwardRef('DataFrame'), 
170: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
171: Slice [[typing.Any], typing.Any] of typing.Callable -> typing.Callable[[typ
172:     Writing -> typing.Callable[[typing.Any], typing.Any] (old: [<dynapyt.ut
172: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
175: Before function call
173: Literal    value: AnyStr_cov
174: Literal    value: True
175: After function call
176:     Writing -> +AnyStr_cov (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt
176: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
179: Before function call
177: Literal    value: AnyStr_con
178: Literal    value: True
179: After function call
180:     Writing -> -AnyStr_con (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt
180: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
186: Accessing -> <class 'pandas._typing.BaseBuffer'>
186:     Reading -> <class 'pandas._typing.BaseBuffer'>
187: Accessing -> +AnyStr_cov
187:     Reading -> +AnyStr_cov
188: Slice [+AnyStr_cov] of <class 'typing.Protocol'> -> typing.Protocol[+AnyStr
192: Accessing -> <class 'pandas._typing.BaseBuffer'>
192:     Reading -> <class 'pandas._typing.BaseBuffer'>
193: Accessing -> -AnyStr_con
193:     Reading -> -AnyStr_con
194: Slice [-AnyStr_con] of <class 'typing.Protocol'> -> typing.Protocol[-AnyStr
198: Accessing -> <class 'pandas._typing.ReadBuffer'>
198:     Reading -> <class 'pandas._typing.ReadBuffer'>
199: Slice [<class 'bytes'>] of <class 'pandas._typing.ReadBuffer'> -> pandas._t
202: Accessing -> <class 'pandas._typing.WriteBuffer'>
202:     Reading -> <class 'pandas._typing.WriteBuffer'>
203: Slice [<class 'bytes'>] of <class 'pandas._typing.WriteBuffer'> -> pandas._
206: Accessing -> <class 'pandas._typing.ReadBuffer'>
206:     Reading -> <class 'pandas._typing.ReadBuffer'>
207: Accessing -> +AnyStr_cov
207:     Reading -> +AnyStr_cov
208: Slice [+AnyStr_cov] of <class 'pandas._typing.ReadBuffer'> -> pandas._typin
215: Literal    value: PathLike[str]
216: Slice [<class 'str'>, 'PathLike[str]'] of typing.Union -> typing.Union[str,
217:     Writing -> typing.Union[str, ForwardRef('PathLike[str]')] (old: [<dynap
217: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
218: Slice [<class 'str'>, typing.Any] of typing.Dict -> typing.Dict[str, typing
219: Slice [typing.Dict[str, typing.Any]] of typing.Optional -> typing.Optional[
220:     Writing -> typing.Optional[typing.Dict[str, typing.Any]] (old: [<dynapy
220: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
221: Slice [<class 'str'>, typing.Any] of typing.Dict -> typing.Dict[str, typing
222:     Writing -> typing.Dict[str, typing.Any] (old: [<dynapyt.utils.Dynapyt_U
222: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
223: Literal    value: infer
224: Literal    value: gzip
225: Literal    value: bz2
226: Literal    value: zip
227: Literal    value: xz
228: Literal    value: zstd
229: Slice ['infer', 'gzip', 'bz2', 'zip', 'xz', 'zstd'] of typing.Literal -> ty
230: Accessing -> typing.Dict[str, typing.Any]
230:     Reading -> typing.Dict[str, typing.Any]
231: Slice [typing.Literal['infer', 'gzip', 'bz2', 'zip', 'xz', 'zstd'], typing.
232: Slice [typing.Union[typing.Literal['infer', 'gzip', 'bz2', 'zip', 'xz', 'zs
233:     Writing -> typing.Union[typing.Literal['infer', 'gzip', 'bz2', 'zip', '
233: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
234: Slice [typing.Callable] of typing.List -> typing.List[typing.Callable]
235: Slice [typing.Callable, Ellipsis] of typing.Tuple -> typing.Tuple[typing.Ca
236: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
237: Slice [typing.Union[str, int], typing.Callable] of typing.Mapping -> typing
238: Slice [typing.List[typing.Callable], typing.Tuple[typing.Callable, ...], ty
239:     Writing -> typing.Union[typing.List[typing.Callable], typing.Tuple[typi
239: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
240: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
241: Slice [typing.Hashable, typing.Union[str, int]] of typing.Mapping -> typing
242:     Writing -> typing.Mapping[typing.Hashable, typing.Union[str, int]] (old
242: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
243: Literal    value: EngFormatter
244: Slice [<class 'str'>, typing.Callable, 'EngFormatter'] of typing.Union -> t
245:     Writing -> typing.Union[str, typing.Callable, ForwardRef('EngFormatter'
245: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
246: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
247: Slice [typing.Union[str, int]] of typing.Sequence -> typing.Sequence[typing
248: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
249: Slice [typing.Hashable, typing.Union[str, int]] of typing.Mapping -> typing
250: Slice [<class 'str'>, <class 'int'>, typing.Sequence[typing.Union[str, int]
251:     Writing -> typing.Union[str, int, typing.Sequence[typing.Union[str, int
251: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
252: Literal    value: backfill
253: Literal    value: bfill
254: Literal    value: ffill
255: Literal    value: pad
256: Slice ['backfill', 'bfill', 'ffill', 'pad'] of typing.Literal -> typing.Lit
257:     Writing -> typing.Literal['backfill', 'bfill', 'ffill', 'pad'] (old: [<
257: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
258: Literal    value: ArrayManager
259: Literal    value: SingleArrayManager
260: Literal    value: BlockManager
261: Literal    value: SingleBlockManager
262: Slice ['ArrayManager', 'SingleArrayManager', 'BlockManager', 'SingleBlockMa
263:     Writing -> typing.Union[ForwardRef('ArrayManager'), ForwardRef('SingleA
263: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
264: Literal    value: SingleArrayManager
265: Literal    value: SingleBlockManager
266: Slice ['SingleArrayManager', 'SingleBlockManager'] of typing.Union -> typin
267:     Writing -> typing.Union[ForwardRef('SingleArrayManager'), ForwardRef('S
267: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
268: Literal    value: ArrayManager
269: Literal    value: BlockManager
270: Slice ['ArrayManager', 'BlockManager'] of typing.Union -> typing.Union[Forw
271:     Writing -> typing.Union[ForwardRef('ArrayManager'), ForwardRef('BlockMa
271: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
272: Attribute integer of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/d
273: Slice [<class 'int'>, <class 'numpy.integer'>] of typing.Union -> typing.Un
274:     Writing -> typing.Union[int, numpy.integer] (old: [<dynapyt.utils.Dynap
274: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
275: Slice [<class 'int'>] of typing.List -> typing.List[int]
276: Attribute ndarray of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/d
277: Slice [<class 'slice'>, typing.List[int], <class 'numpy.ndarray'>] of typin
278:     Writing -> typing.Union[slice, typing.List[int], numpy.ndarray] (old: [
278: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
279: Accessing -> typing.Union[int, numpy.integer]
279:     Reading -> typing.Union[int, numpy.integer]
280: Accessing -> typing.Union[slice, typing.List[int], numpy.ndarray]
280:     Reading -> typing.Union[slice, typing.List[int], numpy.ndarray]
281: Slice [typing.Union[int, numpy.integer], typing.Union[slice, typing.List[in
282:     Writing -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
282: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
283: Accessing -> typing.Union[int, numpy.integer, slice, typing.List[int], nump
283:     Reading -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
284: Accessing -> typing.Union[int, numpy.integer, slice, typing.List[int], nump
284:     Reading -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
285: Slice [typing.Union[int, numpy.integer, slice, typing.List[int], numpy.ndar
286:     Writing -> typing.Tuple[typing.Union[int, numpy.integer, slice, typing.
286: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
287: Accessing -> typing.Union[int, numpy.integer, slice, typing.List[int], nump
287:     Reading -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
288: Accessing -> typing.Tuple[typing.Union[int, numpy.integer, slice, typing.Li
288:     Reading -> typing.Tuple[typing.Union[int, numpy.integer, slice, typing.
289: Slice [typing.Union[int, numpy.integer, slice, typing.List[int], numpy.ndar
290:     Writing -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
290: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
300: Control-flow enter with condition False
299:     Writing -> typing.Any (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_
299: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
301: Literal    value: average
302: Literal    value: min
303: Literal    value: max
304: Slice ['average', 'min', 'max'] of typing.Literal -> typing.Literal['averag
305:     Writing -> typing.Literal['average', 'min', 'max'] (old: [<dynapyt.util
305: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
306: Literal    value: c
307: Literal    value: python
308: Literal    value: pyarrow
309: Literal    value: python-fwf
310: Slice ['c', 'python', 'pyarrow', 'python-fwf'] of typing.Literal -> typing.
311:     Writing -> typing.Literal['c', 'python', 'pyarrow', 'python-fwf'] (old:
311: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
312: Literal    value: lxml
313: Literal    value: etree
314: Slice ['lxml', 'etree'] of typing.Literal -> typing.Literal['lxml', 'etree'
315:     Writing -> typing.Literal['lxml', 'etree'] (old: [<dynapyt.utils.Dynapy
315: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
1: Literal    value: NaT
2: Literal    value: NaTType
3: Literal    value: OutOfBoundsDatetime
4: Literal    value: Period
5: Literal    value: Timedelta
6: Literal    value: Timestamp
7: Literal    value: iNaT
8: Literal    value: Interval
9:     Writing -> ['NaT', 'NaTType', 'OutOfBoundsDatetime', 'Period', 'Timedelta
9: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
1: Literal    value: dtypes
2: Literal    value: localize_pydatetime
3: Literal    value: NaT
4: Literal    value: NaTType
5: Literal    value: iNaT
6: Literal    value: nat_strings
7: Literal    value: OutOfBoundsDatetime
8: Literal    value: OutOfBoundsTimedelta
9: Literal    value: IncompatibleFrequency
10: Literal    value: Period
11: Literal    value: Resolution
12: Literal    value: Timedelta
13: Literal    value: normalize_i8_timestamps
14: Literal    value: is_date_array_normalized
15: Literal    value: dt64arr_to_periodarr
16: Literal    value: delta_to_nanoseconds
17: Literal    value: ints_to_pydatetime
18: Literal    value: ints_to_pytimedelta
19: Literal    value: get_resolution
20: Literal    value: Timestamp
21: Literal    value: tz_convert_from_utc_single
22: Literal    value: to_offset
23: Literal    value: Tick
24: Literal    value: BaseOffset
25: Literal    value: tz_compare
26:     Writing -> ['dtypes', 'localize_pydatetime', 'NaT', 'NaTType', 'iNaT', '
26: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
1: Literal    value: config
2: Literal    value: detect_console_encoding
3: Literal    value: get_option
4: Literal    value: set_option
5: Literal    value: reset_option
6: Literal    value: describe_option
7: Literal    value: option_context
8: Literal    value: options
9:     Writing -> ['config', 'detect_console_encoding', 'get_option', 'set_optio
9: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
53: Literal    value: False
152: Literal    value: True
181: Literal    value: False
355: Literal    value: 
get_option(pat)

Retrieves the value of the specified op
356:     Writing -> 
get_option(pat)

Retrieves the value of the specified optio
356: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
357: Literal    value: 
set_option(pat, value)

Sets the value of the specified 
358:     Writing -> 
set_option(pat, value)

Sets the value of the specified opt
358: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
359: Literal    value: 
describe_option(pat, _print_desc=False)

Prints the desc
360:     Writing -> 
describe_option(pat, _print_desc=False)

Prints the descrip
360: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
361: Literal    value: 
reset_option(pat)

Reset one or more options to their de
362:     Writing -> 
reset_option(pat)

Reset one or more options to their defau
362: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
366: Before function call
363: Accessing -> <class 'pandas._config.config.CallableDynamicDoc'>
363:     Reading -> <class 'pandas._config.config.CallableDynamicDoc'>
364: Accessing -> <function _get_option at 0x7f99b30f85e0>
364:     Reading -> <function _get_option at 0x7f99b30f85e0>
365: Accessing -> 
get_option(pat)

Retrieves the value of the specified option.
365:     Reading -> 
get_option(pat)

Retrieves the value of the specified optio
327: Entered function with arguments [<pandas._config.config.CallableDynamicDoc 
323: Accessing -> 
get_option(pat)

Retrieves the value of the specified option.
323:     Reading -> 
get_option(pat)

Retrieves the value of the specified optio
324:     Writing -> 
get_option(pat)

Retrieves the value of the specified optio
324: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
325: Accessing -> <function _get_option at 0x7f99b30f85e0>
325:     Reading -> <function _get_option at 0x7f99b30f85e0>
326:     Writing -> <function _get_option at 0x7f99b30f85e0> (old: [<dynapyt.uti
326: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
-1: Uncaught exception _func_exit_() missing 1 required positional argument: 'ii
-1: Uncaught exception _func_exit_() missing 1 required positional argument: 'ii
-1: Uncaught exception _func_exit_() missing 1 required positional argument: 'ii
-1: Uncaught exception _func_exit_() missing 1 required positional argument: 'ii
-1: Uncaught exception _func_exit_() missing 1 required positional argument: 'ii
-1: Uncaught exception _func_exit_() missing 1 required positional argument: 'ii
-1: Uncaught exception _func_exit_() missing 1 required positional argument: 'ii
-1: Uncaught exception _func_exit_() missing 1 required positional argument: 'ii
-1: Uncaught exception _func_exit_() missing 1 required positional argument: 'ii
6: After function call
-1: Execution ended
-1: Execution started
6: Before function call
4: Attribute main of <module 'pytest' from '/home/eghbalaz/.pyenv/versions/dynap
5: Literal    value: /home/eghbalaz/Documents/PhD/Projects/pandas-copy/pandas/te
1: Literal    value: restructuredtext
2:     Writing -> restructuredtext (old: [<dynapyt.utils.Dynapyt_Unidefined.Dyna
2: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
3: Literal    value: numpy
4: Literal    value: pytz
5: Literal    value: dateutil
6:     Writing -> ('numpy', 'pytz', 'dateutil') (old: [<dynapyt.utils.Dynapyt_Un
6: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
7:     Writing -> [] (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined 
7: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
8: Accessing -> ('numpy', 'pytz', 'dateutil')
8:     Reading -> ('numpy', 'pytz', 'dateutil')
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> numpy
10:     Reading -> numpy
11: After function call
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> pytz
10:     Reading -> pytz
11: After function call
19: Control-flow enter with condition True
11: Before function call
10: Accessing -> dateutil
10:     Reading -> dateutil
11: After function call
19: Control-flow exit
20: Accessing -> []
20:     Reading -> []
29: Control-flow enter with condition []
30: Accessing -> (('numpy', 'pytz', 'dateutil'), 'dateutil', [])
30:     Deleting -> (('numpy', 'pytz', 'dateutil'), 'dateutil', [])
8: Control-flow enter with condition False
9: Literal    value: ExtensionArray
10: Attribute ndarray of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dy
11: Slice ['ExtensionArray', <class 'numpy.ndarray'>] of typing.Union -> typing.
12:     Writing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray] (ol
12: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
13: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
13:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
14: Literal    value: Index
15: Literal    value: Series
16: Slice [typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray], 'Index', '
17:     Writing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, For
17: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
18: Slice [<class 'str'>, <class 'int'>, <class 'float'>, <class 'bool'>] of typ
19:     Writing -> typing.Union[str, int, float, bool] (old: [<dynapyt.utils.Dyn
19: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
20: Literal    value: Period
21: Literal    value: Timestamp
22: Literal    value: Timedelta
23: Slice ['Period', 'Timestamp', 'Timedelta'] of typing.Union -> typing.Union[F
24:     Writing -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), F
24: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
25: Literal    value: Period
26: Literal    value: Timestamp
27: Literal    value: Timedelta
28: Literal    value: Interval
29: Slice ['Period', 'Timestamp', 'Timedelta', 'Interval'] of typing.Union -> ty
30:     Writing -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), F
30: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
31: Accessing -> typing.Union[str, int, float, bool]
31:     Reading -> typing.Union[str, int, float, bool]
32: Accessing -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), For
32:     Reading -> typing.Union[ForwardRef('Period'), ForwardRef('Timestamp'), F
33: Slice [typing.Union[str, int, float, bool], typing.Union[ForwardRef('Period'
34:     Writing -> typing.Union[str, int, float, bool, ForwardRef('Period'), For
34: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
36: Before function call
35: Literal    value: IntStrT
36: After function call
37:     Writing -> ~IntStrT (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Und
37: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
38: Literal    value: Timestamp
39: Attribute datetime64 of <module 'numpy' from '/home/eghbalaz/.pyenv/versions
40: Attribute int64 of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyna
41: Slice ['Timestamp', <class 'datetime.datetime'>, <class 'numpy.datetime64'>,
42:     Writing -> typing.Union[ForwardRef('Timestamp'), datetime.datetime, nump
42: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
43: Literal    value: Timedelta
44: Attribute timedelta64 of <module 'numpy' from '/home/eghbalaz/.pyenv/version
45: Attribute int64 of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyna
46: Slice ['Timedelta', <class 'datetime.timedelta'>, <class 'numpy.timedelta64'
47:     Writing -> typing.Union[ForwardRef('Timedelta'), datetime.timedelta, num
47: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
48: Slice [<class 'str'>, <class 'datetime.tzinfo'>] of typing.Union -> typing.U
49:     Writing -> typing.Union[str, datetime.tzinfo] (old: [<dynapyt.utils.Dyna
49: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
52: Before function call
50: Literal    value: NDFrameT
51: Literal    value: NDFrame
52: After function call
53:     Writing -> ~NDFrameT (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Un
53: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
54: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, in
55:     Writing -> typing.Union[str, int] (old: [<dynapyt.utils.Dynapyt_Unidefin
55: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
56: Slice [typing.Hashable] of typing.Sequence -> typing.Sequence[typing.Hashabl
57: Slice [typing.Hashable, typing.Sequence[typing.Hashable]] of typing.Union ->
58:     Writing -> typing.Union[typing.Hashable, typing.Sequence[typing.Hashable
58: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
59: Slice [typing.Hashable, <class 'int'>] of typing.Union -> typing.Union[typin
60:     Writing -> typing.Union[typing.Hashable, int] (old: [<dynapyt.utils.Dyna
60: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
61: Slice [<class 'int'>, Ellipsis] of typing.Tuple -> typing.Tuple[int, ...]
62:     Writing -> typing.Tuple[int, ...] (old: [<dynapyt.utils.Dynapyt_Unidefin
62: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
63: Slice [<class 'str'>] of typing.Optional -> typing.Optional[str]
64: Slice [<class 'str'>] of typing.Optional -> typing.Optional[str]
65: Slice [typing.Optional[str], typing.Optional[str]] of typing.Tuple -> typing
66:     Writing -> typing.Tuple[typing.Optional[str], typing.Optional[str]] (old
66: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
67: Slice [<class 'bool'>] of typing.Optional -> typing.Optional[bool]
68:     Writing -> typing.Optional[bool] (old: [<dynapyt.utils.Dynapyt_Unidefine
68: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
69: Accessing -> typing.Union[str, int, float, bool]
69:     Reading -> typing.Union[str, int, float, bool]
70: Slice [typing.Union[str, int, float, bool], typing.List, typing.Dict] of typ
71: Slice [typing.Union[str, int, float, bool, typing.List, typing.Dict]] of typ
72:     Writing -> typing.Union[str, int, float, bool, typing.List, typing.Dict,
72: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
73: Literal    value: DateOffset
74: Slice [<class 'str'>, 'DateOffset'] of typing.Union -> typing.Union[str, For
75:     Writing -> typing.Union[str, ForwardRef('DateOffset')] (old: [<dynapyt.u
75: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
76: Slice [typing.Any] of typing.Collection -> typing.Collection[typing.Any]
77:     Writing -> typing.Collection[typing.Any] (old: [<dynapyt.utils.Dynapyt_U
77: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
78: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
78:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray]
79: Attribute random of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
80: Attribute Generator of <module 'numpy.random' from '/home/eghbalaz/.pyenv/ve
81: Attribute random of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
82: Attribute BitGenerator of <module 'numpy.random' from '/home/eghbalaz/.pyenv
83: Attribute random of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
84: Attribute RandomState of <module 'numpy.random' from '/home/eghbalaz/.pyenv/
85: Slice [<class 'int'>, typing.Union[ForwardRef('ExtensionArray'), numpy.ndarr
86:     Writing -> typing.Union[int, ForwardRef('ExtensionArray'), numpy.ndarray
86: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
87: Attribute dtype of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyna
88: Slice [<class 'str'>, <class 'float'>, <class 'int'>, <class 'complex'>, <cl
89: Slice [typing.Union[str, float, int, complex, bool, object]] of typing.Type 
90: Slice [<class 'str'>, <class 'numpy.dtype'>, typing.Type[typing.Union[str, f
91:     Writing -> typing.Union[str, numpy.dtype, typing.Type[typing.Union[str, 
91: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
92: Literal    value: ExtensionDtype
93: Accessing -> typing.Union[str, numpy.dtype, typing.Type[typing.Union[str, fl
93:     Reading -> typing.Union[str, numpy.dtype, typing.Type[typing.Union[str, 
94: Slice ['ExtensionDtype', typing.Union[str, numpy.dtype, typing.Type[typing.U
95:     Writing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, 
95: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
96: Literal    value: ExtensionDtype
97: Literal    value: npt.DTypeLike
98: Slice ['ExtensionDtype', 'npt.DTypeLike'] of typing.Union -> typing.Union[Fo
99:     Writing -> typing.Union[ForwardRef('ExtensionDtype'), ForwardRef('npt.DT
99: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
100: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
100:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
101: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
101:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
102: Slice [typing.Hashable, typing.Union[ForwardRef('ExtensionDtype'), str, num
103: Slice [typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, typing.
104:     Writing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
104: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
105: Attribute dtype of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
106: Literal    value: ExtensionDtype
107: Slice [<class 'numpy.dtype'>, 'ExtensionDtype'] of typing.Union -> typing.U
108:     Writing -> typing.Union[numpy.dtype, ForwardRef('ExtensionDtype')] (old
108: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
109: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
109:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
110: Accessing -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, t
110:     Reading -> typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype,
111: Slice [[typing.Union[ForwardRef('ExtensionDtype'), str, numpy.dtype, typing
112: Slice [typing.Hashable, typing.Callable[[typing.Union[ForwardRef('Extension
113:     Writing -> typing.Dict[typing.Hashable, typing.Callable[[typing.Union[F
113: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
114: Slice [typing.Hashable] of typing.List -> typing.List[typing.Hashable]
115: Slice [typing.Hashable] of typing.List -> typing.List[typing.Hashable]
116: Slice [typing.List[typing.Hashable]] of typing.List -> typing.List[typing.L
117: Slice [typing.Hashable] of typing.List -> typing.List[typing.Hashable]
118: Slice [typing.Hashable, typing.List[typing.Hashable]] of typing.Dict -> typ
119: Slice [<class 'bool'>, typing.List[typing.Hashable], typing.List[typing.Lis
120:     Writing -> typing.Union[bool, typing.List[typing.Hashable], typing.List
120: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
121: Slice [typing.Hashable, typing.Any] of typing.Mapping -> typing.Mapping[typ
122: Slice [[typing.Hashable], typing.Hashable] of typing.Callable -> typing.Cal
123: Slice [typing.Mapping[typing.Hashable, typing.Any], typing.Callable[[typing
124:     Writing -> typing.Union[typing.Mapping[typing.Hashable, typing.Any], ty
124: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
126: Before function call
125: Literal    value: T
126: After function call
127:     Writing -> ~T (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefine
127: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
128: Slice [Ellipsis, typing.Any] of typing.Callable -> typing.Callable[..., typ
129:     Writing -> typing.Callable[..., typing.Any] (old: [<dynapyt.utils.Dynap
129: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
132: Before function call
130: Literal    value: F
131: Accessing -> typing.Callable[..., typing.Any]
131:     Reading -> typing.Callable[..., typing.Any]
132: After function call
133:     Writing -> ~F (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefine
133: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
134: Literal    value: Series
135: Literal    value: Series
136: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Forw
136:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Fo
137: Slice ['Series', typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, 
138: Slice [['Series'], typing.Union[ForwardRef('Series'), ForwardRef('Extension
139: Slice [typing.Callable[[ForwardRef('Series')], typing.Union[ForwardRef('Ser
140:     Writing -> typing.Optional[typing.Callable[[ForwardRef('Series')], typi
140: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
141: Literal    value: Index
142: Literal    value: Index
143: Accessing -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Forw
143:     Reading -> typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, Fo
144: Slice ['Index', typing.Union[ForwardRef('ExtensionArray'), numpy.ndarray, F
145: Slice [['Index'], typing.Union[ForwardRef('Index'), ForwardRef('ExtensionAr
146: Slice [typing.Callable[[ForwardRef('Index')], typing.Union[ForwardRef('Inde
147:     Writing -> typing.Optional[typing.Callable[[ForwardRef('Index')], typin
147: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
148: Slice [typing.Callable, <class 'str'>] of typing.Union -> typing.Union[typi
149:     Writing -> typing.Union[typing.Callable, str] (old: [<dynapyt.utils.Dyn
149: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
150: Accessing -> typing.Union[typing.Callable, str]
150:     Reading -> typing.Union[typing.Callable, str]
151: Accessing -> typing.Union[typing.Callable, str]
151:     Reading -> typing.Union[typing.Callable, str]
152: Slice [typing.Union[typing.Callable, str]] of typing.List -> typing.List[ty
153: Slice [typing.Union[typing.Callable, str], typing.List[typing.Union[typing.
154: Slice [typing.Hashable, typing.Union[typing.Callable, str, typing.List[typi
155:     Writing -> typing.Dict[typing.Hashable, typing.Union[typing.Callable, s
155: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
156: Accessing -> typing.Union[typing.Callable, str]
156:     Reading -> typing.Union[typing.Callable, str]
157: Accessing -> typing.Union[typing.Callable, str]
157:     Reading -> typing.Union[typing.Callable, str]
158: Slice [typing.Union[typing.Callable, str]] of typing.List -> typing.List[ty
159: Accessing -> typing.Dict[typing.Hashable, typing.Union[typing.Callable, str
159:     Reading -> typing.Dict[typing.Hashable, typing.Union[typing.Callable, s
160: Slice [typing.Union[typing.Callable, str], typing.List[typing.Union[typing.
161:     Writing -> typing.Union[typing.Callable, str, typing.List[typing.Union[
161: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
162: Literal    value: Series
163: Literal    value: DataFrame
164: Literal    value: GroupBy
165: Literal    value: SeriesGroupBy
166: Literal    value: DataFrameGroupBy
167: Literal    value: BaseWindow
168: Literal    value: Resampler
169: Slice ['Series', 'DataFrame', 'GroupBy', 'SeriesGroupBy', 'DataFrameGroupBy
170:     Writing -> typing.Union[ForwardRef('Series'), ForwardRef('DataFrame'), 
170: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
171: Slice [[typing.Any], typing.Any] of typing.Callable -> typing.Callable[[typ
172:     Writing -> typing.Callable[[typing.Any], typing.Any] (old: [<dynapyt.ut
172: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
175: Before function call
173: Literal    value: AnyStr_cov
174: Literal    value: True
175: After function call
176:     Writing -> +AnyStr_cov (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt
176: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
179: Before function call
177: Literal    value: AnyStr_con
178: Literal    value: True
179: After function call
180:     Writing -> -AnyStr_con (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt
180: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
186: Accessing -> <class 'pandas._typing.BaseBuffer'>
186:     Reading -> <class 'pandas._typing.BaseBuffer'>
187: Accessing -> +AnyStr_cov
187:     Reading -> +AnyStr_cov
188: Slice [+AnyStr_cov] of <class 'typing.Protocol'> -> typing.Protocol[+AnyStr
192: Accessing -> <class 'pandas._typing.BaseBuffer'>
192:     Reading -> <class 'pandas._typing.BaseBuffer'>
193: Accessing -> -AnyStr_con
193:     Reading -> -AnyStr_con
194: Slice [-AnyStr_con] of <class 'typing.Protocol'> -> typing.Protocol[-AnyStr
198: Accessing -> <class 'pandas._typing.ReadBuffer'>
198:     Reading -> <class 'pandas._typing.ReadBuffer'>
199: Slice [<class 'bytes'>] of <class 'pandas._typing.ReadBuffer'> -> pandas._t
202: Accessing -> <class 'pandas._typing.WriteBuffer'>
202:     Reading -> <class 'pandas._typing.WriteBuffer'>
203: Slice [<class 'bytes'>] of <class 'pandas._typing.WriteBuffer'> -> pandas._
206: Accessing -> <class 'pandas._typing.ReadBuffer'>
206:     Reading -> <class 'pandas._typing.ReadBuffer'>
207: Accessing -> +AnyStr_cov
207:     Reading -> +AnyStr_cov
208: Slice [+AnyStr_cov] of <class 'pandas._typing.ReadBuffer'> -> pandas._typin
215: Literal    value: PathLike[str]
216: Slice [<class 'str'>, 'PathLike[str]'] of typing.Union -> typing.Union[str,
217:     Writing -> typing.Union[str, ForwardRef('PathLike[str]')] (old: [<dynap
217: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
218: Slice [<class 'str'>, typing.Any] of typing.Dict -> typing.Dict[str, typing
219: Slice [typing.Dict[str, typing.Any]] of typing.Optional -> typing.Optional[
220:     Writing -> typing.Optional[typing.Dict[str, typing.Any]] (old: [<dynapy
220: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
221: Slice [<class 'str'>, typing.Any] of typing.Dict -> typing.Dict[str, typing
222:     Writing -> typing.Dict[str, typing.Any] (old: [<dynapyt.utils.Dynapyt_U
222: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
223: Literal    value: infer
224: Literal    value: gzip
225: Literal    value: bz2
226: Literal    value: zip
227: Literal    value: xz
228: Literal    value: zstd
229: Slice ['infer', 'gzip', 'bz2', 'zip', 'xz', 'zstd'] of typing.Literal -> ty
230: Accessing -> typing.Dict[str, typing.Any]
230:     Reading -> typing.Dict[str, typing.Any]
231: Slice [typing.Literal['infer', 'gzip', 'bz2', 'zip', 'xz', 'zstd'], typing.
232: Slice [typing.Union[typing.Literal['infer', 'gzip', 'bz2', 'zip', 'xz', 'zs
233:     Writing -> typing.Union[typing.Literal['infer', 'gzip', 'bz2', 'zip', '
233: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
234: Slice [typing.Callable] of typing.List -> typing.List[typing.Callable]
235: Slice [typing.Callable, Ellipsis] of typing.Tuple -> typing.Tuple[typing.Ca
236: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
237: Slice [typing.Union[str, int], typing.Callable] of typing.Mapping -> typing
238: Slice [typing.List[typing.Callable], typing.Tuple[typing.Callable, ...], ty
239:     Writing -> typing.Union[typing.List[typing.Callable], typing.Tuple[typi
239: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
240: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
241: Slice [typing.Hashable, typing.Union[str, int]] of typing.Mapping -> typing
242:     Writing -> typing.Mapping[typing.Hashable, typing.Union[str, int]] (old
242: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
243: Literal    value: EngFormatter
244: Slice [<class 'str'>, typing.Callable, 'EngFormatter'] of typing.Union -> t
245:     Writing -> typing.Union[str, typing.Callable, ForwardRef('EngFormatter'
245: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
246: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
247: Slice [typing.Union[str, int]] of typing.Sequence -> typing.Sequence[typing
248: Slice [<class 'str'>, <class 'int'>] of typing.Union -> typing.Union[str, i
249: Slice [typing.Hashable, typing.Union[str, int]] of typing.Mapping -> typing
250: Slice [<class 'str'>, <class 'int'>, typing.Sequence[typing.Union[str, int]
251:     Writing -> typing.Union[str, int, typing.Sequence[typing.Union[str, int
251: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
252: Literal    value: backfill
253: Literal    value: bfill
254: Literal    value: ffill
255: Literal    value: pad
256: Slice ['backfill', 'bfill', 'ffill', 'pad'] of typing.Literal -> typing.Lit
257:     Writing -> typing.Literal['backfill', 'bfill', 'ffill', 'pad'] (old: [<
257: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
258: Literal    value: ArrayManager
259: Literal    value: SingleArrayManager
260: Literal    value: BlockManager
261: Literal    value: SingleBlockManager
262: Slice ['ArrayManager', 'SingleArrayManager', 'BlockManager', 'SingleBlockMa
263:     Writing -> typing.Union[ForwardRef('ArrayManager'), ForwardRef('SingleA
263: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
264: Literal    value: SingleArrayManager
265: Literal    value: SingleBlockManager
266: Slice ['SingleArrayManager', 'SingleBlockManager'] of typing.Union -> typin
267:     Writing -> typing.Union[ForwardRef('SingleArrayManager'), ForwardRef('S
267: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
268: Literal    value: ArrayManager
269: Literal    value: BlockManager
270: Slice ['ArrayManager', 'BlockManager'] of typing.Union -> typing.Union[Forw
271:     Writing -> typing.Union[ForwardRef('ArrayManager'), ForwardRef('BlockMa
271: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
272: Attribute integer of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/d
273: Slice [<class 'int'>, <class 'numpy.integer'>] of typing.Union -> typing.Un
274:     Writing -> typing.Union[int, numpy.integer] (old: [<dynapyt.utils.Dynap
274: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
275: Slice [<class 'int'>] of typing.List -> typing.List[int]
276: Attribute ndarray of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/d
277: Slice [<class 'slice'>, typing.List[int], <class 'numpy.ndarray'>] of typin
278:     Writing -> typing.Union[slice, typing.List[int], numpy.ndarray] (old: [
278: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
279: Accessing -> typing.Union[int, numpy.integer]
279:     Reading -> typing.Union[int, numpy.integer]
280: Accessing -> typing.Union[slice, typing.List[int], numpy.ndarray]
280:     Reading -> typing.Union[slice, typing.List[int], numpy.ndarray]
281: Slice [typing.Union[int, numpy.integer], typing.Union[slice, typing.List[in
282:     Writing -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
282: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
283: Accessing -> typing.Union[int, numpy.integer, slice, typing.List[int], nump
283:     Reading -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
284: Accessing -> typing.Union[int, numpy.integer, slice, typing.List[int], nump
284:     Reading -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
285: Slice [typing.Union[int, numpy.integer, slice, typing.List[int], numpy.ndar
286:     Writing -> typing.Tuple[typing.Union[int, numpy.integer, slice, typing.
286: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
287: Accessing -> typing.Union[int, numpy.integer, slice, typing.List[int], nump
287:     Reading -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
288: Accessing -> typing.Tuple[typing.Union[int, numpy.integer, slice, typing.Li
288:     Reading -> typing.Tuple[typing.Union[int, numpy.integer, slice, typing.
289: Slice [typing.Union[int, numpy.integer, slice, typing.List[int], numpy.ndar
290:     Writing -> typing.Union[int, numpy.integer, slice, typing.List[int], nu
290: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
300: Control-flow enter with condition False
299:     Writing -> typing.Any (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_
299: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
301: Literal    value: average
302: Literal    value: min
303: Literal    value: max
304: Slice ['average', 'min', 'max'] of typing.Literal -> typing.Literal['averag
305:     Writing -> typing.Literal['average', 'min', 'max'] (old: [<dynapyt.util
305: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
306: Literal    value: c
307: Literal    value: python
308: Literal    value: pyarrow
309: Literal    value: python-fwf
310: Slice ['c', 'python', 'pyarrow', 'python-fwf'] of typing.Literal -> typing.
311:     Writing -> typing.Literal['c', 'python', 'pyarrow', 'python-fwf'] (old:
311: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
312: Literal    value: lxml
313: Literal    value: etree
314: Slice ['lxml', 'etree'] of typing.Literal -> typing.Literal['lxml', 'etree'
315:     Writing -> typing.Literal['lxml', 'etree'] (old: [<dynapyt.utils.Dynapy
315: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
1: Literal    value: NaT
2: Literal    value: NaTType
3: Literal    value: OutOfBoundsDatetime
4: Literal    value: Period
5: Literal    value: Timedelta
6: Literal    value: Timestamp
7: Literal    value: iNaT
8: Literal    value: Interval
9:     Writing -> ['NaT', 'NaTType', 'OutOfBoundsDatetime', 'Period', 'Timedelta
9: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
1: Literal    value: dtypes
2: Literal    value: localize_pydatetime
3: Literal    value: NaT
4: Literal    value: NaTType
5: Literal    value: iNaT
6: Literal    value: nat_strings
7: Literal    value: OutOfBoundsDatetime
8: Literal    value: OutOfBoundsTimedelta
9: Literal    value: IncompatibleFrequency
10: Literal    value: Period
11: Literal    value: Resolution
12: Literal    value: Timedelta
13: Literal    value: normalize_i8_timestamps
14: Literal    value: is_date_array_normalized
15: Literal    value: dt64arr_to_periodarr
16: Literal    value: delta_to_nanoseconds
17: Literal    value: ints_to_pydatetime
18: Literal    value: ints_to_pytimedelta
19: Literal    value: get_resolution
20: Literal    value: Timestamp
21: Literal    value: tz_convert_from_utc_single
22: Literal    value: to_offset
23: Literal    value: Tick
24: Literal    value: BaseOffset
25: Literal    value: tz_compare
26:     Writing -> ['dtypes', 'localize_pydatetime', 'NaT', 'NaTType', 'iNaT', '
26: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
1: Literal    value: config
2: Literal    value: detect_console_encoding
3: Literal    value: get_option
4: Literal    value: set_option
5: Literal    value: reset_option
6: Literal    value: describe_option
7: Literal    value: option_context
8: Literal    value: options
9:     Writing -> ['config', 'detect_console_encoding', 'get_option', 'set_optio
9: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
53: Literal    value: False
152: Literal    value: True
181: Literal    value: False
355: Literal    value: 
get_option(pat)

Retrieves the value of the specified op
356:     Writing -> 
get_option(pat)

Retrieves the value of the specified optio
356: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
357: Literal    value: 
set_option(pat, value)

Sets the value of the specified 
358:     Writing -> 
set_option(pat, value)

Sets the value of the specified opt
358: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
359: Literal    value: 
describe_option(pat, _print_desc=False)

Prints the desc
360:     Writing -> 
describe_option(pat, _print_desc=False)

Prints the descrip
360: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
361: Literal    value: 
reset_option(pat)

Reset one or more options to their de
362:     Writing -> 
reset_option(pat)

Reset one or more options to their defau
362: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
366: Before function call
363: Accessing -> <class 'pandas._config.config.CallableDynamicDoc'>
363:     Reading -> <class 'pandas._config.config.CallableDynamicDoc'>
364: Accessing -> <function _get_option at 0x7f2add68d5e0>
364:     Reading -> <function _get_option at 0x7f2add68d5e0>
365: Accessing -> 
get_option(pat)

Retrieves the value of the specified option.
365:     Reading -> 
get_option(pat)

Retrieves the value of the specified optio
327: Entered function with arguments [<pandas._config.config.CallableDynamicDoc 
323: Accessing -> 
get_option(pat)

Retrieves the value of the specified option.
323:     Reading -> 
get_option(pat)

Retrieves the value of the specified optio
324:     Writing -> 
get_option(pat)

Retrieves the value of the specified optio
324: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
325: Accessing -> <function _get_option at 0x7f2add68d5e0>
325:     Reading -> <function _get_option at 0x7f2add68d5e0>
326:     Writing -> <function _get_option at 0x7f2add68d5e0> (old: [<dynapyt.uti
326: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
327: Exiting function -> None
366: After function call
367:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
367: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
371: Before function call
368: Accessing -> <class 'pandas._config.config.CallableDynamicDoc'>
368:     Reading -> <class 'pandas._config.config.CallableDynamicDoc'>
369: Accessing -> <function _set_option at 0x7f2add68d670>
369:     Reading -> <function _set_option at 0x7f2add68d670>
370: Accessing -> 
set_option(pat, value)

Sets the value of the specified optio
370:     Reading -> 
set_option(pat, value)

Sets the value of the specified opt
327: Entered function with arguments [<pandas._config.config.CallableDynamicDoc 
323: Accessing -> 
set_option(pat, value)

Sets the value of the specified optio
323:     Reading -> 
set_option(pat, value)

Sets the value of the specified opt
324:     Writing -> 
set_option(pat, value)

Sets the value of the specified opt
324: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
325: Accessing -> <function _set_option at 0x7f2add68d670>
325:     Reading -> <function _set_option at 0x7f2add68d670>
326:     Writing -> <function _set_option at 0x7f2add68d670> (old: [<dynapyt.uti
326: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
327: Exiting function -> None
371: After function call
372:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
372: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
376: Before function call
373: Accessing -> <class 'pandas._config.config.CallableDynamicDoc'>
373:     Reading -> <class 'pandas._config.config.CallableDynamicDoc'>
374: Accessing -> <function _reset_option at 0x7f2add68d790>
374:     Reading -> <function _reset_option at 0x7f2add68d790>
375: Accessing -> 
reset_option(pat)

Reset one or more options to their default
375:     Reading -> 
reset_option(pat)

Reset one or more options to their defau
327: Entered function with arguments [<pandas._config.config.CallableDynamicDoc 
323: Accessing -> 
reset_option(pat)

Reset one or more options to their default
323:     Reading -> 
reset_option(pat)

Reset one or more options to their defau
324:     Writing -> 
reset_option(pat)

Reset one or more options to their defau
324: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
325: Accessing -> <function _reset_option at 0x7f2add68d790>
325:     Reading -> <function _reset_option at 0x7f2add68d790>
326:     Writing -> <function _reset_option at 0x7f2add68d790> (old: [<dynapyt.u
326: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
327: Exiting function -> None
376: After function call
377:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
377: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
381: Before function call
378: Accessing -> <class 'pandas._config.config.CallableDynamicDoc'>
378:     Reading -> <class 'pandas._config.config.CallableDynamicDoc'>
379: Accessing -> <function _describe_option at 0x7f2add68d700>
379:     Reading -> <function _describe_option at 0x7f2add68d700>
380: Accessing -> 
describe_option(pat, _print_desc=False)

Prints the descripti
380:     Reading -> 
describe_option(pat, _print_desc=False)

Prints the descrip
327: Entered function with arguments [<pandas._config.config.CallableDynamicDoc 
323: Accessing -> 
describe_option(pat, _print_desc=False)

Prints the descripti
323:     Reading -> 
describe_option(pat, _print_desc=False)

Prints the descrip
324:     Writing -> 
describe_option(pat, _print_desc=False)

Prints the descrip
324: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
325: Accessing -> <function _describe_option at 0x7f2add68d700>
325:     Reading -> <function _describe_option at 0x7f2add68d700>
326:     Writing -> <function _describe_option at 0x7f2add68d700> (old: [<dynapy
326: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
327: Exiting function -> None
381: After function call
382:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
382: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
385: Before function call
383: Accessing -> <class 'pandas._config.config.DictWrapper'>
383:     Reading -> <class 'pandas._config.config.DictWrapper'>
384: Accessing -> {}
384:     Reading -> {}
244: Entered function with arguments [<pandas._config.config.DictWrapper object 
238: Before function call
234: Attribute __setattr__ of <class 'object'> -> <slot wrapper '__setattr__' of
235: Accessing -> <pandas._config.config.DictWrapper object at 0x7f2addaa0700>
235:     Reading -> <pandas._config.config.DictWrapper object at 0x7f2addaa0700>
236: Literal    value: d
237: Accessing -> {}
237:     Reading -> {}
238: After function call
243: Before function call
239: Attribute __setattr__ of <class 'object'> -> <slot wrapper '__setattr__' of
240: Accessing -> <pandas._config.config.DictWrapper object at 0x7f2addaa0700>
240:     Reading -> <pandas._config.config.DictWrapper object at 0x7f2addaa0700>
241: Literal    value: prefix
242: Accessing -> 
242:     Reading -> 
243: After function call
244: Exiting function -> None
385: After function call
386:     Writing -> <pandas._config.config.DictWrapper object at 0x7f2addaa0700>
386: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
776: Literal    value: 80
777: Literal    value: False
1036: Before function call
1035: Accessing -> <function is_type_factory at 0x7f2add7545e0>
1035:     Reading -> <function is_type_factory at 0x7f2add7545e0>
940: Entered function with arguments [<class 'int'>]
938: Accessing -> <function is_type_factory.<locals>.inner at 0x7f2add7548b0>
938:     Reading -> <function is_type_factory.<locals>.inner at 0x7f2add7548b0>
939: Exiting function -> <function is_type_factory.<locals>.inner at 0x7f2add754
939:    Returning <function is_type_factory.<locals>.inner at 0x7f2add7548b0>
1036: After function call
1037:     Writing -> <function is_type_factory.<locals>.inner at 0x7f2add7548b0>
1037: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 
1039: Before function call
1038: Accessing -> <function is_type_factory at 0x7f2add7545e0>
1038:     Reading -> <function is_type_factory at 0x7f2add7545e0>
940: Entered function with arguments [<class 'bool'>]
938: Accessing -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
938:     Reading -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
939: Exiting function -> <function is_type_factory.<locals>.inner at 0x7f2add754
939:    Returning <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
1039: After function call
1040:     Writing -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
1040: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 
1042: Before function call
1041: Accessing -> <function is_type_factory at 0x7f2add7545e0>
1041:     Reading -> <function is_type_factory at 0x7f2add7545e0>
940: Entered function with arguments [<class 'float'>]
938: Accessing -> <function is_type_factory.<locals>.inner at 0x7f2add754a60>
938:     Reading -> <function is_type_factory.<locals>.inner at 0x7f2add754a60>
939: Exiting function -> <function is_type_factory.<locals>.inner at 0x7f2add754
939:    Returning <function is_type_factory.<locals>.inner at 0x7f2add754a60>
1042: After function call
1043:     Writing -> <function is_type_factory.<locals>.inner at 0x7f2add754a60>
1043: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 
1045: Before function call
1044: Accessing -> <function is_type_factory at 0x7f2add7545e0>
1044:     Reading -> <function is_type_factory at 0x7f2add7545e0>
940: Entered function with arguments [<class 'str'>]
938: Accessing -> <function is_type_factory.<locals>.inner at 0x7f2add754af0>
938:     Reading -> <function is_type_factory.<locals>.inner at 0x7f2add754af0>
939: Exiting function -> <function is_type_factory.<locals>.inner at 0x7f2add754
939:    Returning <function is_type_factory.<locals>.inner at 0x7f2add754af0>
1045: After function call
1046:     Writing -> <function is_type_factory.<locals>.inner at 0x7f2add754af0>
1046: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 
1048: Before function call
1047: Accessing -> <function is_instance_factory at 0x7f2add754670>
1047:     Reading -> <function is_instance_factory at 0x7f2add754670>
969: Entered function with arguments [(<class 'str'>, <class 'bytes'>)]
943: Before function call
942: Accessing -> (<class 'str'>, <class 'bytes'>)
942:     Reading -> (<class 'str'>, <class 'bytes'>)
943: After function call
956: Control-flow enter with condition True
945: Before function call
944: Accessing -> (<class 'str'>, <class 'bytes'>)
944:     Reading -> (<class 'str'>, <class 'bytes'>)
945: After function call
946:     Writing -> (<class 'str'>, <class 'bytes'>) (old: [(<class 'str'>, <cla
946: Assignment [(<class 'str'>, <class 'bytes'>)] -> (<class 'str'>, <class 'by
951: Before function call
947: Literal    value: |
948: Attribute join of | -> <built-in method join of str object at 0x7f2af5b62b3
950: Before function call
949: Accessing -> (<class 'str'>, <class 'bytes'>)
949:     Reading -> (<class 'str'>, <class 'bytes'>)
950: After function call
951: After function call
952:     Writing -> <class 'str'>|<class 'bytes'> (old: [<dynapyt.utils.Dynapyt_
952: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
956: Control-flow exit
967: Accessing -> <function is_instance_factory.<locals>.inner at 0x7f2add754b80
967:     Reading -> <function is_instance_factory.<locals>.inner at 0x7f2add754b
968: Exiting function -> <function is_instance_factory.<locals>.inner at 0x7f2ad
968:    Returning <function is_instance_factory.<locals>.inner at 0x7f2add754b80
1048: After function call
1049:     Writing -> <function is_instance_factory.<locals>.inner at 0x7f2add754
1049: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 
1: Literal    value: 
: boolean
    When True, prints and parses dates with the 
2:     Writing -> 
: boolean
    When True, prints and parses dates with the day
2: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
3: Literal    value: 
: boolean
    When True, prints and parses dates with the 
4:     Writing -> 
: boolean
    When True, prints and parses dates with the yea
4: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
7: Before function call
5: Attribute config_prefix of <module 'pandas._config.config' from '/home/eghbal
6: Literal    value: display
7: After function call
925: Entered function with arguments ['display']
898: Accessing -> <function register_option at 0x7f2add68d8b0>
898:     Reading -> <function register_option at 0x7f2add68d8b0>
899:     Writing -> <function register_option at 0x7f2add68d8b0> (old: [<dynapyt
899: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
900: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
900:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
901:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
901: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
902: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
902:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
903:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
903: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
906: Before function call
904: Accessing -> <function config_prefix.<locals>.wrap at 0x7f2add754940>
904:     Reading -> <function config_prefix.<locals>.wrap at 0x7f2add754940>
905: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
905:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
897: Entered function with arguments [<pandas._config.config.CallableDynamicDoc 
895: Before function call
894: Accessing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
894:     Reading -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
895: After function call
896: Exiting function -> <function config_prefix.<locals>.wrap.<locals>.inner at
896:    Returning <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
906: After function call
907:     Writing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
907: Assignment [<pandas._config.config.CallableDynamicDoc object at 0x7f2adda9d
910: Before function call
908: Accessing -> <function config_prefix.<locals>.wrap at 0x7f2add754940>
908:     Reading -> <function config_prefix.<locals>.wrap at 0x7f2add754940>
909: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
909:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
897: Entered function with arguments [<pandas._config.config.CallableDynamicDoc 
895: Before function call
894: Accessing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
894:     Reading -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
895: After function call
896: Exiting function -> <function config_prefix.<locals>.wrap.<locals>.inner at
896:    Returning <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
910: After function call
911:     Writing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
911: Assignment [<pandas._config.config.CallableDynamicDoc object at 0x7f2adda9c
914: Before function call
912: Accessing -> <function config_prefix.<locals>.wrap at 0x7f2add754940>
912:     Reading -> <function config_prefix.<locals>.wrap at 0x7f2add754940>
913: Accessing -> <function register_option at 0x7f2add68d8b0>
913:     Reading -> <function register_option at 0x7f2add68d8b0>
897: Entered function with arguments [<function register_option at 0x7f2add68d8b
895: Before function call
894: Accessing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
894:     Reading -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
895: After function call
896: Exiting function -> <function config_prefix.<locals>.wrap.<locals>.inner at
896:    Returning <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
914: After function call
915:     Writing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
915: Assignment [<function register_option at 0x7f2add68d8b0>] -> <function conf
917: Exiting function -> None
917:    Yielding None
13: Before function call
8: Attribute register_option of <module 'pandas._config.config' from '/home/eghb
9: Literal    value: date_dayfirst
10: Literal    value: False
11: Accessing -> 
: boolean
    When True, prints and parses dates with the day 
11:     Reading -> 
: boolean
    When True, prints and parses dates with the da
12: Attribute is_bool of <module 'pandas._config.config' from '/home/eghbalaz/Do
893: Entered function with arguments ['date_dayfirst']
883: Accessing -> display
883:     Reading -> display
884: Accessing -> date_dayfirst
884:     Reading -> date_dayfirst
885: Literal    value: display.date_dayfirst
886:     Writing -> display.date_dayfirst (old: [<dynapyt.utils.Dynapyt_Unidefin
886: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
891: Before function call
887: Accessing -> <function register_option at 0x7f2add68d8b0>
887:     Reading -> <function register_option at 0x7f2add68d8b0>
888: Accessing -> display.date_dayfirst
888:     Reading -> display.date_dayfirst
889: Accessing -> (False, '\n: boolean\n    When True, prints and parses dates w
889:     Reading -> (False, '\n: boolean\n    When True, prints and parses dates
890: Accessing -> {'validator': <function is_type_factory.<locals>.inner at 0x7f
890:     Reading -> {'validator': <function is_type_factory.<locals>.inner at 0x
566: Entered function with arguments ['display.date_dayfirst', False, '\n: boole
448: Before function call
446: Accessing -> display.date_dayfirst
446:     Reading -> display.date_dayfirst
447: Attribute lower of display.date_dayfirst -> <built-in method lower of str o
448: After function call
449:     Writing -> display.date_dayfirst (old: ['display.date_dayfirst'] )
449: Assignment ['display.date_dayfirst'] -> display.date_dayfirst
450: Accessing -> display.date_dayfirst
450:     Reading -> display.date_dayfirst
451: Accessing -> {}
451:     Reading -> {}
458: Control-flow enter with condition False
459: Accessing -> display.date_dayfirst
459:     Reading -> display.date_dayfirst
460: Accessing -> ['all']
460:     Reading -> ['all']
467: Control-flow enter with condition False
468: Accessing -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
468:     Reading -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
472: Control-flow enter with condition <function is_type_factory.<locals>.inner 
471: Before function call
469: Accessing -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
469:     Reading -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
470: Accessing -> False
470:     Reading -> False
937: Entered function with arguments [False]
929: Before function call
928: Accessing -> False
928:     Reading -> False
929: After function call
930: Accessing -> <class 'bool'>
930:     Reading -> <class 'bool'>
936: Control-flow enter with condition False
937: Exiting function -> None
471: After function call
472: Control-flow exit
476: Before function call
473: Accessing -> display.date_dayfirst
473:     Reading -> display.date_dayfirst
474: Attribute split of display.date_dayfirst -> <built-in method split of str o
475: Literal    value: .
476: After function call
477:     Writing -> ['display', 'date_dayfirst'] (old: [<dynapyt.utils.Dynapyt_U
477: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
478: Accessing -> ['display', 'date_dayfirst']
478:     Reading -> ['display', 'date_dayfirst']
501: Control-flow enter with condition True
486: Before function call
479: Attribute match of <module 're' from '/home/eghbalaz/.pyenv/versions/3.9.0/
480: Literal    value: ^
481: Attribute Name of <module 'tokenize' from '/home/eghbalaz/.pyenv/versions/3
482: Binary Operation ^ Add \w+ -> ^\w+
483: Literal    value: $
484: Binary Operation ^\w+ Add $ -> ^\w+$
485: Accessing -> display
485:     Reading -> display
486: After function call
487: Unary Operation Not <re.Match object; span=(0, 7), match='display'> -> Fals
492: Control-flow enter with condition False
495: Before function call
493: Attribute iskeyword of <module 'keyword' from '/home/eghbalaz/.pyenv/versio
494: Accessing -> display
494:     Reading -> display
495: After function call
500: Control-flow enter with condition False
501: Control-flow enter with condition True
486: Before function call
479: Attribute match of <module 're' from '/home/eghbalaz/.pyenv/versions/3.9.0/
480: Literal    value: ^
481: Attribute Name of <module 'tokenize' from '/home/eghbalaz/.pyenv/versions/3
482: Binary Operation ^ Add \w+ -> ^\w+
483: Literal    value: $
484: Binary Operation ^\w+ Add $ -> ^\w+$
485: Accessing -> date_dayfirst
485:     Reading -> date_dayfirst
486: After function call
487: Unary Operation Not <re.Match object; span=(0, 13), match='date_dayfirst'> 
492: Control-flow enter with condition False
495: Before function call
493: Attribute iskeyword of <module 'keyword' from '/home/eghbalaz/.pyenv/versio
494: Accessing -> date_dayfirst
494:     Reading -> date_dayfirst
495: After function call
500: Control-flow enter with condition False
501: Control-flow exit
502: Accessing -> {}
502:     Reading -> {}
503:     Writing -> {} (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefine
503: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
504: Literal    value: Path prefix to option '{option}' is already an option
505:     Writing -> Path prefix to option '{option}' is already an option (old: 
505: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
510: Before function call
506: Accessing -> ['display', 'date_dayfirst']
506:     Reading -> ['display', 'date_dayfirst']
507: Literal    value: 1
508: Unary Operation Minus 1 -> -1
509: Slice [(None, -1, None)] of ['display', 'date_dayfirst'] -> ['display']
510: After function call
536: Control-flow enter with condition True
512: Before function call
511: Accessing -> {}
511:     Reading -> {}
512: After function call
513: Unary Operation Not True -> False
526: Control-flow enter with condition False
527: Accessing -> display
527:     Reading -> display
528: Accessing -> {}
528:     Reading -> {}
531: Control-flow enter with condition True
530:     Writing -> {} (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefine
530: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
531: Control-flow exit
532: Accessing -> {'display': {}}
532:     Reading -> {'display': {}}
533: Accessing -> display
533:     Reading -> display
534: Slice ['display'] of {'display': {}} -> {}
535:     Writing -> {} (old: [{'display': {}}] )
535: Assignment [{'display': {}}] -> {}
536: Control-flow exit
538: Before function call
537: Accessing -> {}
537:     Reading -> {}
538: After function call
539: Unary Operation Not True -> False
553: Control-flow enter with condition False
556: Accessing -> False
556:     Reading -> False
554: Literal    value: 1
555: Unary Operation Minus 1 -> -1
557:     Writing -> False (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undef
557: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
554: Literal    value: 1
555: Unary Operation Minus 1 -> -1
564: Before function call
558: Accessing -> <class 'pandas._config.config.RegisteredOption'>
558:     Reading -> <class 'pandas._config.config.RegisteredOption'>
559: Accessing -> display.date_dayfirst
559:     Reading -> display.date_dayfirst
560: Accessing -> False
560:     Reading -> False
561: Accessing -> 
: boolean
    When True, prints and parses dates with the day
561:     Reading -> 
: boolean
    When True, prints and parses dates with the d
562: Accessing -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
562:     Reading -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
563: Accessing -> None
563:     Reading -> None
564: After function call
565:     Writing -> RegisteredOption(key='display.date_dayfirst', defval=False, 
565: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
566: Exiting function -> None
891: After function call
892: Exiting function -> None
892:    Returning None
13: After function call
19: Before function call
14: Attribute register_option of <module 'pandas._config.config' from '/home/egh
15: Literal    value: date_yearfirst
16: Literal    value: False
17: Accessing -> 
: boolean
    When True, prints and parses dates with the year
17:     Reading -> 
: boolean
    When True, prints and parses dates with the ye
18: Attribute is_bool of <module 'pandas._config.config' from '/home/eghbalaz/Do
893: Entered function with arguments ['date_yearfirst']
883: Accessing -> display
883:     Reading -> display
884: Accessing -> date_yearfirst
884:     Reading -> date_yearfirst
885: Literal    value: display.date_yearfirst
886:     Writing -> display.date_yearfirst (old: [<dynapyt.utils.Dynapyt_Unidefi
886: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
891: Before function call
887: Accessing -> <function register_option at 0x7f2add68d8b0>
887:     Reading -> <function register_option at 0x7f2add68d8b0>
888: Accessing -> display.date_yearfirst
888:     Reading -> display.date_yearfirst
889: Accessing -> (False, '\n: boolean\n    When True, prints and parses dates w
889:     Reading -> (False, '\n: boolean\n    When True, prints and parses dates
890: Accessing -> {'validator': <function is_type_factory.<locals>.inner at 0x7f
890:     Reading -> {'validator': <function is_type_factory.<locals>.inner at 0x
566: Entered function with arguments ['display.date_yearfirst', False, '\n: bool
448: Before function call
446: Accessing -> display.date_yearfirst
446:     Reading -> display.date_yearfirst
447: Attribute lower of display.date_yearfirst -> <built-in method lower of str 
448: After function call
449:     Writing -> display.date_yearfirst (old: ['display.date_yearfirst'] )
449: Assignment ['display.date_yearfirst'] -> display.date_yearfirst
450: Accessing -> display.date_yearfirst
450:     Reading -> display.date_yearfirst
451: Accessing -> {'display.date_dayfirst': RegisteredOption(key='display.date_d
451:     Reading -> {'display.date_dayfirst': RegisteredOption(key='display.date
458: Control-flow enter with condition False
459: Accessing -> display.date_yearfirst
459:     Reading -> display.date_yearfirst
460: Accessing -> ['all']
460:     Reading -> ['all']
467: Control-flow enter with condition False
468: Accessing -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
468:     Reading -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
472: Control-flow enter with condition <function is_type_factory.<locals>.inner 
471: Before function call
469: Accessing -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
469:     Reading -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
470: Accessing -> False
470:     Reading -> False
937: Entered function with arguments [False]
929: Before function call
928: Accessing -> False
928:     Reading -> False
929: After function call
930: Accessing -> <class 'bool'>
930:     Reading -> <class 'bool'>
936: Control-flow enter with condition False
937: Exiting function -> None
471: After function call
472: Control-flow exit
476: Before function call
473: Accessing -> display.date_yearfirst
473:     Reading -> display.date_yearfirst
474: Attribute split of display.date_yearfirst -> <built-in method split of str 
475: Literal    value: .
476: After function call
477:     Writing -> ['display', 'date_yearfirst'] (old: [<dynapyt.utils.Dynapyt_
477: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
478: Accessing -> ['display', 'date_yearfirst']
478:     Reading -> ['display', 'date_yearfirst']
501: Control-flow enter with condition True
486: Before function call
479: Attribute match of <module 're' from '/home/eghbalaz/.pyenv/versions/3.9.0/
480: Literal    value: ^
481: Attribute Name of <module 'tokenize' from '/home/eghbalaz/.pyenv/versions/3
482: Binary Operation ^ Add \w+ -> ^\w+
483: Literal    value: $
484: Binary Operation ^\w+ Add $ -> ^\w+$
485: Accessing -> display
485:     Reading -> display
486: After function call
487: Unary Operation Not <re.Match object; span=(0, 7), match='display'> -> Fals
492: Control-flow enter with condition False
495: Before function call
493: Attribute iskeyword of <module 'keyword' from '/home/eghbalaz/.pyenv/versio
494: Accessing -> display
494:     Reading -> display
495: After function call
500: Control-flow enter with condition False
501: Control-flow enter with condition True
486: Before function call
479: Attribute match of <module 're' from '/home/eghbalaz/.pyenv/versions/3.9.0/
480: Literal    value: ^
481: Attribute Name of <module 'tokenize' from '/home/eghbalaz/.pyenv/versions/3
482: Binary Operation ^ Add \w+ -> ^\w+
483: Literal    value: $
484: Binary Operation ^\w+ Add $ -> ^\w+$
485: Accessing -> date_yearfirst
485:     Reading -> date_yearfirst
486: After function call
487: Unary Operation Not <re.Match object; span=(0, 14), match='date_yearfirst'>
492: Control-flow enter with condition False
495: Before function call
493: Attribute iskeyword of <module 'keyword' from '/home/eghbalaz/.pyenv/versio
494: Accessing -> date_yearfirst
494:     Reading -> date_yearfirst
495: After function call
500: Control-flow enter with condition False
501: Control-flow exit
502: Accessing -> {'display': {'date_dayfirst': False}}
502:     Reading -> {'display': {'date_dayfirst': False}}
503:     Writing -> {'display': {'date_dayfirst': False}} (old: [<dynapyt.utils.
503: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
504: Literal    value: Path prefix to option '{option}' is already an option
505:     Writing -> Path prefix to option '{option}' is already an option (old: 
505: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
510: Before function call
506: Accessing -> ['display', 'date_yearfirst']
506:     Reading -> ['display', 'date_yearfirst']
507: Literal    value: 1
508: Unary Operation Minus 1 -> -1
509: Slice [(None, -1, None)] of ['display', 'date_yearfirst'] -> ['display']
510: After function call
536: Control-flow enter with condition True
512: Before function call
511: Accessing -> {'display': {'date_dayfirst': False}}
511:     Reading -> {'display': {'date_dayfirst': False}}
512: After function call
513: Unary Operation Not True -> False
526: Control-flow enter with condition False
527: Accessing -> display
527:     Reading -> display
528: Accessing -> {'display': {'date_dayfirst': False}}
528:     Reading -> {'display': {'date_dayfirst': False}}
531: Control-flow enter with condition False
532: Accessing -> {'display': {'date_dayfirst': False}}
532:     Reading -> {'display': {'date_dayfirst': False}}
533: Accessing -> display
533:     Reading -> display
534: Slice ['display'] of {'display': {'date_dayfirst': False}} -> {'date_dayfir
535:     Writing -> {'date_dayfirst': False} (old: [{'display': {'date_dayfirst'
535: Assignment [{'display': {'date_dayfirst': False}}] -> {'date_dayfirst': Fal
536: Control-flow exit
538: Before function call
537: Accessing -> {'date_dayfirst': False}
537:     Reading -> {'date_dayfirst': False}
538: After function call
539: Unary Operation Not True -> False
553: Control-flow enter with condition False
556: Accessing -> False
556:     Reading -> False
554: Literal    value: 1
555: Unary Operation Minus 1 -> -1
557:     Writing -> False (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undef
557: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
554: Literal    value: 1
555: Unary Operation Minus 1 -> -1
564: Before function call
558: Accessing -> <class 'pandas._config.config.RegisteredOption'>
558:     Reading -> <class 'pandas._config.config.RegisteredOption'>
559: Accessing -> display.date_yearfirst
559:     Reading -> display.date_yearfirst
560: Accessing -> False
560:     Reading -> False
561: Accessing -> 
: boolean
    When True, prints and parses dates with the yea
561:     Reading -> 
: boolean
    When True, prints and parses dates with the y
562: Accessing -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
562:     Reading -> <function is_type_factory.<locals>.inner at 0x7f2add7549d0>
563: Accessing -> None
563:     Reading -> None
564: After function call
565:     Writing -> RegisteredOption(key='display.date_yearfirst', defval=False,
565: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
566: Exiting function -> None
891: After function call
892: Exiting function -> None
892:    Returning None
19: After function call
918: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
918:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
919:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
919: Assignment [<function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2ad
920: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
920:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
921:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
921: Assignment [<function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2ad
922: Accessing -> <function register_option at 0x7f2add68d8b0>
922:     Reading -> <function register_option at 0x7f2add68d8b0>
923:     Writing -> <function register_option at 0x7f2add68d8b0> (old: [<functio
923: Assignment [<function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2ad
925: Exiting function -> None
45: Literal    value: 
: str/unicode
    Defaults to the detected encoding of th
46:     Writing -> 
: str/unicode
    Defaults to the detected encoding of the c
46: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
49: Before function call
47: Attribute config_prefix of <module 'pandas._config.config' from '/home/eghba
48: Literal    value: display
49: After function call
925: Entered function with arguments ['display']
898: Accessing -> <function register_option at 0x7f2add68d8b0>
898:     Reading -> <function register_option at 0x7f2add68d8b0>
899:     Writing -> <function register_option at 0x7f2add68d8b0> (old: [<dynapyt
899: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
900: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
900:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
901:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
901: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
902: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
902:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
903:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
903: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
906: Before function call
904: Accessing -> <function config_prefix.<locals>.wrap at 0x7f2add754dc0>
904:     Reading -> <function config_prefix.<locals>.wrap at 0x7f2add754dc0>
905: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
905:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
897: Entered function with arguments [<pandas._config.config.CallableDynamicDoc 
895: Before function call
894: Accessing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
894:     Reading -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
895: After function call
896: Exiting function -> <function config_prefix.<locals>.wrap.<locals>.inner at
896:    Returning <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
906: After function call
907:     Writing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
907: Assignment [<pandas._config.config.CallableDynamicDoc object at 0x7f2adda9d
910: Before function call
908: Accessing -> <function config_prefix.<locals>.wrap at 0x7f2add754dc0>
908:     Reading -> <function config_prefix.<locals>.wrap at 0x7f2add754dc0>
909: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
909:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
897: Entered function with arguments [<pandas._config.config.CallableDynamicDoc 
895: Before function call
894: Accessing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
894:     Reading -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
895: After function call
896: Exiting function -> <function config_prefix.<locals>.wrap.<locals>.inner at
896:    Returning <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
910: After function call
911:     Writing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
911: Assignment [<pandas._config.config.CallableDynamicDoc object at 0x7f2adda9c
914: Before function call
912: Accessing -> <function config_prefix.<locals>.wrap at 0x7f2add754dc0>
912:     Reading -> <function config_prefix.<locals>.wrap at 0x7f2add754dc0>
913: Accessing -> <function register_option at 0x7f2add68d8b0>
913:     Reading -> <function register_option at 0x7f2add68d8b0>
897: Entered function with arguments [<function register_option at 0x7f2add68d8b
895: Before function call
894: Accessing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
894:     Reading -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
895: After function call
896: Exiting function -> <function config_prefix.<locals>.wrap.<locals>.inner at
896:    Returning <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2a
914: After function call
915:     Writing -> <function config_prefix.<locals>.wrap.<locals>.inner at 0x7f
915: Assignment [<function register_option at 0x7f2add68d8b0>] -> <function conf
917: Exiting function -> None
917:    Yielding None
56: Before function call
50: Attribute register_option of <module 'pandas._config.config' from '/home/egh
51: Literal    value: encoding
53: Before function call
52: Accessing -> <function detect_console_encoding at 0x7f2add754ee0>
52:     Reading -> <function detect_console_encoding at 0x7f2add754ee0>
44: Entered function with arguments []
2:     Writing -> None (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefine
2: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
4: Attribute stdout of <module 'sys' (built-in)> -> <_io.TextIOWrapper name='<st
5: Attribute encoding of <_io.TextIOWrapper name='<stdout>' mode='w' encoding='u
6: Attribute stdin of <module 'sys' (built-in)> -> <_io.TextIOWrapper name='<std
7: Attribute encoding of <_io.TextIOWrapper name='<stdin>' mode='r' encoding='ut
8: Binary Operation utf-8 Or utf-8 -> utf-8
9:     Writing -> utf-8 (old: [None] )
9: Assignment [None] -> utf-8
11: Accessing -> utf-8
11:     Reading -> utf-8
12: Unary Operation Not utf-8 -> False
15: Before function call
13: Accessing -> utf-8
13:     Reading -> utf-8
14: Attribute lower of utf-8 -> <built-in method lower of str object at 0x7f2af5
15: After function call
17: Binary Operation False Or False -> False
24: Control-flow enter with condition False
25: Accessing -> utf-8
25:     Reading -> utf-8
26: Unary Operation Not utf-8 -> False
29: Before function call
27: Accessing -> utf-8
27:     Reading -> utf-8
28: Attribute lower of utf-8 -> <built-in method lower of str object at 0x7f2af5
29: After function call
31: Binary Operation False Or False -> False
35: Control-flow enter with condition False
36: Accessing -> None
36:     Reading -> None
37: Unary Operation Not None -> True
41: Control-flow enter with condition True
39: Before function call
38: Attribute getdefaultencoding of <module 'sys' (built-in)> -> <built-in funct
39: After function call
40:     Writing -> utf-8 (old: [None] )
40: Assignment [None] -> utf-8
41: Control-flow exit
42: Accessing -> utf-8
42:     Reading -> utf-8
43: Exiting function -> utf-8
43:    Returning utf-8
53: After function call
54: Accessing -> 
: str/unicode
    Defaults to the detected encoding of the con
54:     Reading -> 
: str/unicode
    Defaults to the detected encoding of the c
55: Attribute is_text of <module 'pandas._config.config' from '/home/eghbalaz/Do
893: Entered function with arguments ['encoding']
883: Accessing -> display
883:     Reading -> display
884: Accessing -> encoding
884:     Reading -> encoding
885: Literal    value: display.encoding
886:     Writing -> display.encoding (old: [<dynapyt.utils.Dynapyt_Unidefined.Dy
886: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
891: Before function call
887: Accessing -> <function register_option at 0x7f2add68d8b0>
887:     Reading -> <function register_option at 0x7f2add68d8b0>
888: Accessing -> display.encoding
888:     Reading -> display.encoding
889: Accessing -> ('utf-8', '\n: str/unicode\n    Defaults to the detected encod
889:     Reading -> ('utf-8', '\n: str/unicode\n    Defaults to the detected enc
890: Accessing -> {'validator': <function is_instance_factory.<locals>.inner at 
890:     Reading -> {'validator': <function is_instance_factory.<locals>.inner a
566: Entered function with arguments ['display.encoding', 'utf-8', '\n: str/unic
448: Before function call
446: Accessing -> display.encoding
446:     Reading -> display.encoding
447: Attribute lower of display.encoding -> <built-in method lower of str object
448: After function call
449:     Writing -> display.encoding (old: ['display.encoding'] )
449: Assignment ['display.encoding'] -> display.encoding
450: Accessing -> display.encoding
450:     Reading -> display.encoding
451: Accessing -> {'display.date_dayfirst': RegisteredOption(key='display.date_d
451:     Reading -> {'display.date_dayfirst': RegisteredOption(key='display.date
458: Control-flow enter with condition False
459: Accessing -> display.encoding
459:     Reading -> display.encoding
460: Accessing -> ['all']
460:     Reading -> ['all']
467: Control-flow enter with condition False
468: Accessing -> <function is_instance_factory.<locals>.inner at 0x7f2add754b80
468:     Reading -> <function is_instance_factory.<locals>.inner at 0x7f2add754b
472: Control-flow enter with condition <function is_instance_factory.<locals>.in
471: Before function call
469: Accessing -> <function is_instance_factory.<locals>.inner at 0x7f2add754b80
469:     Reading -> <function is_instance_factory.<locals>.inner at 0x7f2add754b
470: Accessing -> utf-8
470:     Reading -> utf-8
966: Entered function with arguments ['utf-8']
959: Before function call
957: Accessing -> utf-8
957:     Reading -> utf-8
958: Accessing -> (<class 'str'>, <class 'bytes'>)
958:     Reading -> (<class 'str'>, <class 'bytes'>)
959: After function call
960: Unary Operation Not True -> False
965: Control-flow enter with condition False
966: Exiting function -> None
471: After function call
472: Control-flow exit
476: Before function call
473: Accessing -> display.encoding
473:     Reading -> display.encoding
474: Attribute split of display.encoding -> <built-in method split of str object
475: Literal    value: .
476: After function call
477:     Writing -> ['display', 'encoding'] (old: [<dynapyt.utils.Dynapyt_Unidef
477: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
478: Accessing -> ['display', 'encoding']
478:     Reading -> ['display', 'encoding']
501: Control-flow enter with condition True
486: Before function call
479: Attribute match of <module 're' from '/home/eghbalaz/.pyenv/versions/3.9.0/
480: Literal    value: ^
481: Attribute Name of <module 'tokenize' from '/home/eghbalaz/.pyenv/versions/3
482: Binary Operation ^ Add \w+ -> ^\w+
483: Literal    value: $
484: Binary Operation ^\w+ Add $ -> ^\w+$
485: Accessing -> display
485:     Reading -> display
486: After function call
487: Unary Operation Not <re.Match object; span=(0, 7), match='display'> -> Fals
492: Control-flow enter with condition False
495: Before function call
493: Attribute iskeyword of <module 'keyword' from '/home/eghbalaz/.pyenv/versio
494: Accessing -> display
494:     Reading -> display
495: After function call
500: Control-flow enter with condition False
501: Control-flow enter with condition True
486: Before function call
479: Attribute match of <module 're' from '/home/eghbalaz/.pyenv/versions/3.9.0/
480: Literal    value: ^
481: Attribute Name of <module 'tokenize' from '/home/eghbalaz/.pyenv/versions/3
482: Binary Operation ^ Add \w+ -> ^\w+
483: Literal    value: $
484: Binary Operation ^\w+ Add $ -> ^\w+$
485: Accessing -> encoding
485:     Reading -> encoding
486: After function call
487: Unary Operation Not <re.Match object; span=(0, 8), match='encoding'> -> Fal
492: Control-flow enter with condition False
495: Before function call
493: Attribute iskeyword of <module 'keyword' from '/home/eghbalaz/.pyenv/versio
494: Accessing -> encoding
494:     Reading -> encoding
495: After function call
500: Control-flow enter with condition False
501: Control-flow exit
502: Accessing -> {'display': {'date_dayfirst': False, 'date_yearfirst': False}}
502:     Reading -> {'display': {'date_dayfirst': False, 'date_yearfirst': False
503:     Writing -> {'display': {'date_dayfirst': False, 'date_yearfirst': False
503: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
504: Literal    value: Path prefix to option '{option}' is already an option
505:     Writing -> Path prefix to option '{option}' is already an option (old: 
505: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
510: Before function call
506: Accessing -> ['display', 'encoding']
506:     Reading -> ['display', 'encoding']
507: Literal    value: 1
508: Unary Operation Minus 1 -> -1
509: Slice [(None, -1, None)] of ['display', 'encoding'] -> ['display']
510: After function call
536: Control-flow enter with condition True
512: Before function call
511: Accessing -> {'display': {'date_dayfirst': False, 'date_yearfirst': False}}
511:     Reading -> {'display': {'date_dayfirst': False, 'date_yearfirst': False
512: After function call
513: Unary Operation Not True -> False
526: Control-flow enter with condition False
527: Accessing -> display
527:     Reading -> display
528: Accessing -> {'display': {'date_dayfirst': False, 'date_yearfirst': False}}
528:     Reading -> {'display': {'date_dayfirst': False, 'date_yearfirst': False
531: Control-flow enter with condition False
532: Accessing -> {'display': {'date_dayfirst': False, 'date_yearfirst': False}}
532:     Reading -> {'display': {'date_dayfirst': False, 'date_yearfirst': False
533: Accessing -> display
533:     Reading -> display
534: Slice ['display'] of {'display': {'date_dayfirst': False, 'date_yearfirst':
535:     Writing -> {'date_dayfirst': False, 'date_yearfirst': False} (old: [{'d
535: Assignment [{'display': {'date_dayfirst': False, 'date_yearfirst': False}}]
536: Control-flow exit
538: Before function call
537: Accessing -> {'date_dayfirst': False, 'date_yearfirst': False}
537:     Reading -> {'date_dayfirst': False, 'date_yearfirst': False}
538: After function call
539: Unary Operation Not True -> False
553: Control-flow enter with condition False
556: Accessing -> utf-8
556:     Reading -> utf-8
554: Literal    value: 1
555: Unary Operation Minus 1 -> -1
557:     Writing -> utf-8 (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undef
557: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
554: Literal    value: 1
555: Unary Operation Minus 1 -> -1
564: Before function call
558: Accessing -> <class 'pandas._config.config.RegisteredOption'>
558:     Reading -> <class 'pandas._config.config.RegisteredOption'>
559: Accessing -> display.encoding
559:     Reading -> display.encoding
560: Accessing -> utf-8
560:     Reading -> utf-8
561: Accessing -> 
: str/unicode
    Defaults to the detected encoding of the co
561:     Reading -> 
: str/unicode
    Defaults to the detected encoding of the 
562: Accessing -> <function is_instance_factory.<locals>.inner at 0x7f2add754b80
562:     Reading -> <function is_instance_factory.<locals>.inner at 0x7f2add754b
563: Accessing -> None
563:     Reading -> None
564: After function call
565:     Writing -> RegisteredOption(key='display.encoding', defval='utf-8', doc
565: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
566: Exiting function -> None
891: After function call
892: Exiting function -> None
892:    Returning None
56: After function call
918: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
918:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
919:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
919: Assignment [<function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2ad
920: Accessing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2adda9
920:     Reading -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
921:     Writing -> <pandas._config.config.CallableDynamicDoc object at 0x7f2add
921: Assignment [<function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2ad
922: Accessing -> <function register_option at 0x7f2add68d8b0>
922:     Reading -> <function register_option at 0x7f2add68d8b0>
923:     Writing -> <function register_option at 0x7f2add68d8b0> (old: [<functio
923: Assignment [<function config_prefix.<locals>.wrap.<locals>.inner at 0x7f2ad
925: Exiting function -> None
3: Attribute LC_ALL of <module 'locale' from '/home/eghbalaz/.pyenv/versions/3.9
35: Attribute LC_ALL of <module 'locale' from '/home/eghbalaz/.pyenv/versions/3.
75: Literal    value: True
77: Accessing -> <function _default_locale_getter at 0x7f2add7470d0>
77:     Reading -> <function _default_locale_getter at 0x7f2add7470d0>
5: Literal    value: 2
92: Literal    value: 2
245: Literal    value: 2
456: Literal    value: 0
501: Literal    value: 1
1: Attribute contextmanager of <module 'contextlib' from '/home/eghbalaz/.pyenv/
1: Control-flow enter with condition False
31: Before function call
25: Literal    value: Type[Int64Index]
30: Before function call
26: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
26:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
27: Literal    value: ABCInt64Index
28: Literal    value: _typ
29: Literal    value: int64index
24: Entered function with arguments ['ABCInt64Index', '_typ', ('int64index',)]
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6c6490>
11:     Reading -> <classmethod object at 0x7f2add6c6490>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6c6490>
13:     Reading -> <classmethod object at 0x7f2add6c6490>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6c6490>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6c6490>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6c6490>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCInt64Index
20:     Reading -> ABCInt64Index
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6c6490>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6c6490>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCInt64Index'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCInt64Index'>
30: After function call
31: After function call
32:     Writing -> <class 'pandas.core.dtypes.generic.ABCInt64Index'> (old: [<dy
32: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
39: Before function call
33: Literal    value: Type[UInt64Index]
38: Before function call
34: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
34:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
35: Literal    value: ABCUInt64Index
36: Literal    value: _typ
37: Literal    value: uint64index
24: Entered function with arguments ['ABCUInt64Index', '_typ', ('uint64index',)]
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9340>
11:     Reading -> <classmethod object at 0x7f2add6e9340>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9340>
13:     Reading -> <classmethod object at 0x7f2add6e9340>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9340>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9340>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9340>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCUInt64Index
20:     Reading -> ABCUInt64Index
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9340>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9340>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCUInt64Index'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCUInt64Index'>
38: After function call
39: After function call
40:     Writing -> <class 'pandas.core.dtypes.generic.ABCUInt64Index'> (old: [<d
40: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
47: Before function call
41: Literal    value: Type[RangeIndex]
46: Before function call
42: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
42:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
43: Literal    value: ABCRangeIndex
44: Literal    value: _typ
45: Literal    value: rangeindex
24: Entered function with arguments ['ABCRangeIndex', '_typ', ('rangeindex',)]
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e92b0>
11:     Reading -> <classmethod object at 0x7f2add6e92b0>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e92b0>
13:     Reading -> <classmethod object at 0x7f2add6e92b0>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e92b0>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e92b0>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e92b0>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCRangeIndex
20:     Reading -> ABCRangeIndex
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e92b0>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e92b0>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCRangeIndex'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCRangeIndex'>
46: After function call
47: After function call
48:     Writing -> <class 'pandas.core.dtypes.generic.ABCRangeIndex'> (old: [<dy
48: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
55: Before function call
49: Literal    value: Type[Float64Index]
54: Before function call
50: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
50:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
51: Literal    value: ABCFloat64Index
52: Literal    value: _typ
53: Literal    value: float64index
24: Entered function with arguments ['ABCFloat64Index', '_typ', ('float64index',
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9220>
11:     Reading -> <classmethod object at 0x7f2add6e9220>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9220>
13:     Reading -> <classmethod object at 0x7f2add6e9220>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9220>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9220>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9220>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCFloat64Index
20:     Reading -> ABCFloat64Index
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9220>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9220>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCFloat64Index'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCFloat64Index'>
54: After function call
55: After function call
56:     Writing -> <class 'pandas.core.dtypes.generic.ABCFloat64Index'> (old: [<
56: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
63: Before function call
57: Literal    value: Type[MultiIndex]
62: Before function call
58: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
58:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
59: Literal    value: ABCMultiIndex
60: Literal    value: _typ
61: Literal    value: multiindex
24: Entered function with arguments ['ABCMultiIndex', '_typ', ('multiindex',)]
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9190>
11:     Reading -> <classmethod object at 0x7f2add6e9190>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9190>
13:     Reading -> <classmethod object at 0x7f2add6e9190>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9190>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9190>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9190>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCMultiIndex
20:     Reading -> ABCMultiIndex
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9190>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9190>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCMultiIndex'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCMultiIndex'>
62: After function call
63: After function call
64:     Writing -> <class 'pandas.core.dtypes.generic.ABCMultiIndex'> (old: [<dy
64: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
71: Before function call
65: Literal    value: Type[DatetimeIndex]
70: Before function call
66: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
66:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
67: Literal    value: ABCDatetimeIndex
68: Literal    value: _typ
69: Literal    value: datetimeindex
24: Entered function with arguments ['ABCDatetimeIndex', '_typ', ('datetimeindex
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9100>
11:     Reading -> <classmethod object at 0x7f2add6e9100>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9100>
13:     Reading -> <classmethod object at 0x7f2add6e9100>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9100>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9100>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9100>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCDatetimeIndex
20:     Reading -> ABCDatetimeIndex
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9100>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9100>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCDatetimeIndex'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCDatetimeIndex'>
70: After function call
71: After function call
72:     Writing -> <class 'pandas.core.dtypes.generic.ABCDatetimeIndex'> (old: [
72: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
79: Before function call
73: Literal    value: Type[TimedeltaIndex]
78: Before function call
74: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
74:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
75: Literal    value: ABCTimedeltaIndex
76: Literal    value: _typ
77: Literal    value: timedeltaindex
24: Entered function with arguments ['ABCTimedeltaIndex', '_typ', ('timedeltaind
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9070>
11:     Reading -> <classmethod object at 0x7f2add6e9070>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9070>
13:     Reading -> <classmethod object at 0x7f2add6e9070>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9070>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9070>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9070>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCTimedeltaIndex
20:     Reading -> ABCTimedeltaIndex
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9070>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9070>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCTimedeltaIndex'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCTimedeltaIndex'>
78: After function call
79: After function call
80:     Writing -> <class 'pandas.core.dtypes.generic.ABCTimedeltaIndex'> (old: 
80: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
87: Before function call
81: Literal    value: Type[PeriodIndex]
86: Before function call
82: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
82:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
83: Literal    value: ABCPeriodIndex
84: Literal    value: _typ
85: Literal    value: periodindex
24: Entered function with arguments ['ABCPeriodIndex', '_typ', ('periodindex',)]
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9400>
11:     Reading -> <classmethod object at 0x7f2add6e9400>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9400>
13:     Reading -> <classmethod object at 0x7f2add6e9400>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9400>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9400>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9400>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCPeriodIndex
20:     Reading -> ABCPeriodIndex
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9400>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9400>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCPeriodIndex'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCPeriodIndex'>
86: After function call
87: After function call
88:     Writing -> <class 'pandas.core.dtypes.generic.ABCPeriodIndex'> (old: [<d
88: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
95: Before function call
89: Literal    value: Type[CategoricalIndex]
94: Before function call
90: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
90:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
91: Literal    value: ABCCategoricalIndex
92: Literal    value: _typ
93: Literal    value: categoricalindex
24: Entered function with arguments ['ABCCategoricalIndex', '_typ', ('categorica
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9490>
11:     Reading -> <classmethod object at 0x7f2add6e9490>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9490>
13:     Reading -> <classmethod object at 0x7f2add6e9490>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9490>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9490>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9490>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCCategoricalIndex
20:     Reading -> ABCCategoricalIndex
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9490>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9490>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCCategoricalIndex'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCCategoricalIndex'>
94: After function call
95: After function call
96:     Writing -> <class 'pandas.core.dtypes.generic.ABCCategoricalIndex'> (old
96: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
103: Before function call
97: Literal    value: Type[IntervalIndex]
102: Before function call
98: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
98:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
99: Literal    value: ABCIntervalIndex
100: Literal    value: _typ
101: Literal    value: intervalindex
24: Entered function with arguments ['ABCIntervalIndex', '_typ', ('intervalindex
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9520>
11:     Reading -> <classmethod object at 0x7f2add6e9520>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9520>
13:     Reading -> <classmethod object at 0x7f2add6e9520>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9520>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9520>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9520>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCIntervalIndex
20:     Reading -> ABCIntervalIndex
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9520>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9520>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCIntervalIndex'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCIntervalIndex'>
102: After function call
103: After function call
104:     Writing -> <class 'pandas.core.dtypes.generic.ABCIntervalIndex'> (old: 
104: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
122: Before function call
105: Literal    value: Type[Index]
121: Before function call
106: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
106:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
107: Literal    value: ABCIndex
108: Literal    value: _typ
109: Literal    value: index
110: Literal    value: int64index
111: Literal    value: rangeindex
112: Literal    value: float64index
113: Literal    value: uint64index
114: Literal    value: numericindex
115: Literal    value: multiindex
116: Literal    value: datetimeindex
117: Literal    value: timedeltaindex
118: Literal    value: periodindex
119: Literal    value: categoricalindex
120: Literal    value: intervalindex
24: Entered function with arguments ['ABCIndex', '_typ', {'float64index', 'multi
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e96a0>
11:     Reading -> <classmethod object at 0x7f2add6e96a0>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e96a0>
13:     Reading -> <classmethod object at 0x7f2add6e96a0>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e96a0>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e96a0>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e96a0>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCIndex
20:     Reading -> ABCIndex
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e96a0>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e96a0>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCIndex'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCIndex'>
121: After function call
122: After function call
123:     Writing -> <class 'pandas.core.dtypes.generic.ABCIndex'> (old: [<dynapy
123: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
131: Before function call
124: Literal    value: Type[NDFrame]
130: Before function call
125: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
125:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
126: Literal    value: ABCNDFrame
127: Literal    value: _typ
128: Literal    value: series
129: Literal    value: dataframe
24: Entered function with arguments ['ABCNDFrame', '_typ', ('series', 'dataframe
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9730>
11:     Reading -> <classmethod object at 0x7f2add6e9730>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9730>
13:     Reading -> <classmethod object at 0x7f2add6e9730>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9730>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9730>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9730>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCNDFrame
20:     Reading -> ABCNDFrame
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9730>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9730>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCNDFrame'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCNDFrame'>
130: After function call
131: After function call
132:     Writing -> <class 'pandas.core.dtypes.generic.ABCNDFrame'> (old: [<dyna
132: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
139: Before function call
133: Literal    value: Type[Series]
138: Before function call
134: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
134:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
135: Literal    value: ABCSeries
136: Literal    value: _typ
137: Literal    value: series
24: Entered function with arguments ['ABCSeries', '_typ', ('series',)]
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e97c0>
11:     Reading -> <classmethod object at 0x7f2add6e97c0>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e97c0>
13:     Reading -> <classmethod object at 0x7f2add6e97c0>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e97c0>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e97c0>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e97c0>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCSeries
20:     Reading -> ABCSeries
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e97c0>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e97c0>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCSeries'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCSeries'>
138: After function call
139: After function call
140:     Writing -> <class 'pandas.core.dtypes.generic.ABCSeries'> (old: [<dynap
140: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
147: Before function call
141: Literal    value: Type[DataFrame]
146: Before function call
142: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
142:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
143: Literal    value: ABCDataFrame
144: Literal    value: _typ
145: Literal    value: dataframe
24: Entered function with arguments ['ABCDataFrame', '_typ', ('dataframe',)]
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9850>
11:     Reading -> <classmethod object at 0x7f2add6e9850>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9850>
13:     Reading -> <classmethod object at 0x7f2add6e9850>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9850>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9850>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9850>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCDataFrame
20:     Reading -> ABCDataFrame
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9850>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9850>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCDataFrame'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCDataFrame'>
146: After function call
147: After function call
148:     Writing -> <class 'pandas.core.dtypes.generic.ABCDataFrame'> (old: [<dy
148: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
155: Before function call
149: Literal    value: Type[Categorical]
154: Before function call
150: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
150:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
151: Literal    value: ABCCategorical
152: Literal    value: _typ
153: Literal    value: categorical
24: Entered function with arguments ['ABCCategorical', '_typ', 'categorical']
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e98e0>
11:     Reading -> <classmethod object at 0x7f2add6e98e0>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e98e0>
13:     Reading -> <classmethod object at 0x7f2add6e98e0>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e98e0>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e98e0>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e98e0>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCCategorical
20:     Reading -> ABCCategorical
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e98e0>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e98e0>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCCategorical'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCCategorical'>
154: After function call
155: After function call
156:     Writing -> <class 'pandas.core.dtypes.generic.ABCCategorical'> (old: [<
156: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
163: Before function call
157: Literal    value: Type[DatetimeArray]
162: Before function call
158: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
158:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
159: Literal    value: ABCDatetimeArray
160: Literal    value: _typ
161: Literal    value: datetimearray
24: Entered function with arguments ['ABCDatetimeArray', '_typ', 'datetimearray'
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9970>
11:     Reading -> <classmethod object at 0x7f2add6e9970>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9970>
13:     Reading -> <classmethod object at 0x7f2add6e9970>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9970>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9970>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9970>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCDatetimeArray
20:     Reading -> ABCDatetimeArray
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9970>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9970>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCDatetimeArray'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCDatetimeArray'>
162: After function call
163: After function call
164:     Writing -> <class 'pandas.core.dtypes.generic.ABCDatetimeArray'> (old: 
164: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
171: Before function call
165: Literal    value: Type[TimedeltaArray]
170: Before function call
166: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
166:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
167: Literal    value: ABCTimedeltaArray
168: Literal    value: _typ
169: Literal    value: timedeltaarray
24: Entered function with arguments ['ABCTimedeltaArray', '_typ', 'timedeltaarra
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9a00>
11:     Reading -> <classmethod object at 0x7f2add6e9a00>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9a00>
13:     Reading -> <classmethod object at 0x7f2add6e9a00>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9a00>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9a00>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9a00>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCTimedeltaArray
20:     Reading -> ABCTimedeltaArray
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9a00>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9a00>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCTimedeltaArray'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCTimedeltaArray'>
170: After function call
171: After function call
172:     Writing -> <class 'pandas.core.dtypes.generic.ABCTimedeltaArray'> (old:
172: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
179: Before function call
173: Literal    value: Type[PeriodArray]
178: Before function call
174: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
174:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
175: Literal    value: ABCPeriodArray
176: Literal    value: _typ
177: Literal    value: periodarray
24: Entered function with arguments ['ABCPeriodArray', '_typ', ('periodarray',)]
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e9a90>
11:     Reading -> <classmethod object at 0x7f2add6e9a90>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e9a90>
13:     Reading -> <classmethod object at 0x7f2add6e9a90>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9a90>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9a90>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9a90>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCPeriodArray
20:     Reading -> ABCPeriodArray
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e9a90>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e9a90>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCPeriodArray'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCPeriodArray'>
178: After function call
179: After function call
180:     Writing -> <class 'pandas.core.dtypes.generic.ABCPeriodArray'> (old: [<
180: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
191: Before function call
181: Literal    value: Type[ExtensionArray]
190: Before function call
182: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
182:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
183: Literal    value: ABCExtensionArray
184: Literal    value: _typ
185: Literal    value: extension
186: Literal    value: categorical
187: Literal    value: periodarray
188: Literal    value: datetimearray
189: Literal    value: timedeltaarray
24: Entered function with arguments ['ABCExtensionArray', '_typ', {'extension', 
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add6e95e0>
11:     Reading -> <classmethod object at 0x7f2add6e95e0>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add6e95e0>
13:     Reading -> <classmethod object at 0x7f2add6e95e0>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add6e95e0>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e95e0>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e95e0>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCExtensionArray
20:     Reading -> ABCExtensionArray
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add6e95e0>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add6e95e0>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCExtensionArray'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCExtensionArray'>
190: After function call
191: After function call
192:     Writing -> <class 'pandas.core.dtypes.generic.ABCExtensionArray'> (old:
192: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
199: Before function call
193: Literal    value: Type[PandasArray]
198: Before function call
194: Accessing -> <function create_pandas_abc_type at 0x7f2add700c10>
194:     Reading -> <function create_pandas_abc_type at 0x7f2add700c10>
195: Literal    value: ABCPandasArray
196: Literal    value: _typ
197: Literal    value: npy_extension
24: Entered function with arguments ['ABCPandasArray', '_typ', ('npy_extension',
10: Literal    value: __instancecheck__
11: Accessing -> <classmethod object at 0x7f2add151eb0>
11:     Reading -> <classmethod object at 0x7f2add151eb0>
12: Literal    value: __subclasscheck__
13: Accessing -> <classmethod object at 0x7f2add151eb0>
13:     Reading -> <classmethod object at 0x7f2add151eb0>
14:     Writing -> {'__instancecheck__': <classmethod object at 0x7f2add151eb0>,
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Before function call
15: Literal    value: ABCBase
16: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add151eb0>, '
16:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add151eb0>,
17: After function call
18:     Writing -> <class 'pandas.core.dtypes.generic.ABCBase'> (old: [<dynapyt.
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
22: Before function call
19: Accessing -> <class 'pandas.core.dtypes.generic.ABCBase'>
19:     Reading -> <class 'pandas.core.dtypes.generic.ABCBase'>
20: Accessing -> ABCPandasArray
20:     Reading -> ABCPandasArray
21: Accessing -> {'__instancecheck__': <classmethod object at 0x7f2add151eb0>, '
21:     Reading -> {'__instancecheck__': <classmethod object at 0x7f2add151eb0>,
22: After function call
23: Exiting function -> <class 'pandas.core.dtypes.generic.ABCPandasArray'>
23:    Returning <class 'pandas.core.dtypes.generic.ABCPandasArray'>
198: After function call
199: After function call
200:     Writing -> <class 'pandas.core.dtypes.generic.ABCPandasArray'> (old: [<
200: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
5: Control-flow enter with condition False
277: Before function call
276: Accessing -> <class 'pandas.core.dtypes.base.Registry'>
276:     Reading -> <class 'pandas.core.dtypes.base.Registry'>
196: Entered function with arguments [<pandas.core.dtypes.base.Registry object a
196: Exiting function -> None
277: After function call
278:     Writing -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430> 
278: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
1: Attribute is_bool of <module 'pandas._libs.lib' from '/home/eghbalaz/Document
2:     Writing -> <built-in function is_bool> (old: [<dynapyt.utils.Dynapyt_Unid
2: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
3: Attribute is_integer of <module 'pandas._libs.lib' from '/home/eghbalaz/Docum
4:     Writing -> <built-in function is_integer> (old: [<dynapyt.utils.Dynapyt_U
4: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
5: Attribute is_float of <module 'pandas._libs.lib' from '/home/eghbalaz/Documen
6:     Writing -> <built-in function is_float> (old: [<dynapyt.utils.Dynapyt_Uni
6: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
7: Attribute is_complex of <module 'pandas._libs.lib' from '/home/eghbalaz/Docum
8:     Writing -> <built-in function is_complex> (old: [<dynapyt.utils.Dynapyt_U
8: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
9: Attribute is_scalar of <module 'pandas._libs.lib' from '/home/eghbalaz/Docume
10:     Writing -> <built-in function is_scalar> (old: [<dynapyt.utils.Dynapyt_U
10: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
11: Attribute is_decimal of <module 'pandas._libs.lib' from '/home/eghbalaz/Docu
12:     Writing -> <built-in function is_decimal> (old: [<dynapyt.utils.Dynapyt_
12: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
13: Attribute is_interval of <module 'pandas._libs.lib' from '/home/eghbalaz/Doc
14:     Writing -> <built-in function is_interval> (old: [<dynapyt.utils.Dynapyt
14: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
15: Attribute is_list_like of <module 'pandas._libs.lib' from '/home/eghbalaz/Do
16:     Writing -> <built-in function is_list_like> (old: [<dynapyt.utils.Dynapy
16: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
17: Attribute is_iterator of <module 'pandas._libs.lib' from '/home/eghbalaz/Doc
18:     Writing -> <built-in function is_iterator> (old: [<dynapyt.utils.Dynapyt
18: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
1: Control-flow enter with condition False
2:     Writing -> <class 'str'> (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt
2: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
3:     Writing -> None (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefine
3: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
4: Literal    value: 100
5:     Writing -> 100 (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined
5: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
6: Literal    value: 8
7:     Writing -> 8 (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined o
7: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
9: Literal    value: 0
10:     Writing -> 0 (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined 
10: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
11: Literal    value: 0
12:     Writing -> 0 (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined 
12: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
34: Accessing -> <class 'pandas.core.dtypes.dtypes.PandasExtensionDtype'>
34:     Reading -> <class 'pandas.core.dtypes.dtypes.PandasExtensionDtype'>
35: Literal    value: category
36:     Writing -> category (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Und
36: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
37: Literal    value: |O08
38:     Writing -> |O08 (old: [<class 'str'>] )
38: Assignment [<class 'str'>] -> |O08
41: Before function call
39: Attribute dtype of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyna
40: Literal    value: O
41: After function call
42:     Writing -> object (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undef
42: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
43: Literal    value: categories
44: Literal    value: ordered
45:     Writing -> ('categories', 'ordered') (old: [<dynapyt.utils.Dynapyt_Unide
45: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
46: Literal    value: False
184: Literal    value: False
479: Literal    value: False
195: Entered function with arguments [<class 'pandas.core.dtypes.dtypes.Categori
192: Before function call
189: Accessing -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
189:     Reading -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
190: Attribute register of <pandas.core.dtypes.base.Registry object at 0x7f2add6
191: Accessing -> <class 'pandas.core.dtypes.dtypes.CategoricalDtype'>
191:     Reading -> <class 'pandas.core.dtypes.dtypes.CategoricalDtype'>
212: Entered function with arguments [<pandas.core.dtypes.base.Registry object a
201: Before function call
199: Accessing -> <class 'pandas.core.dtypes.dtypes.CategoricalDtype'>
199:     Reading -> <class 'pandas.core.dtypes.dtypes.CategoricalDtype'>
200: Accessing -> <class 'pandas.core.dtypes.base.ExtensionDtype'>
200:     Reading -> <class 'pandas.core.dtypes.base.ExtensionDtype'>
201: After function call
202: Unary Operation Not True -> False
206: Control-flow enter with condition False
211: Before function call
207: Accessing -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
207:     Reading -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
208: Attribute dtypes of <pandas.core.dtypes.base.Registry object at 0x7f2add6c6
209: Attribute append of [] -> <built-in method append of list object at 0x7f2ad
210: Accessing -> <class 'pandas.core.dtypes.dtypes.CategoricalDtype'>
210:     Reading -> <class 'pandas.core.dtypes.dtypes.CategoricalDtype'>
211: After function call
212: Exiting function -> None
192: After function call
193: Accessing -> <class 'pandas.core.dtypes.dtypes.CategoricalDtype'>
193:     Reading -> <class 'pandas.core.dtypes.dtypes.CategoricalDtype'>
194: Exiting function -> <class 'pandas.core.dtypes.dtypes.CategoricalDtype'>
194:    Returning <class 'pandas.core.dtypes.dtypes.CategoricalDtype'>
650: Accessing -> <class 'pandas.core.dtypes.dtypes.PandasExtensionDtype'>
650:     Reading -> <class 'pandas.core.dtypes.dtypes.PandasExtensionDtype'>
651: Literal    value: |M8[ns]
652:     Writing -> |M8[ns] (old: [<class 'str'>] )
652: Assignment [<class 'str'>] -> |M8[ns]
653: Literal    value: 101
654:     Writing -> 101 (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefin
654: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
657: Before function call
655: Attribute dtype of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
656: Literal    value: M8[ns]
657: After function call
658:     Writing -> datetime64[ns] (old: [<dynapyt.utils.Dynapyt_Unidefined.Dyna
658: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
659:     Writing -> NaT (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefin
659: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
660: Literal    value: unit
661: Literal    value: tz
662:     Writing -> ('unit', 'tz') (old: [<dynapyt.utils.Dynapyt_Unidefined.Dyna
662: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
665: Before function call
663: Attribute compile of <module 're' from '/home/eghbalaz/.pyenv/versions/3.9.
664: Literal    value: (datetime64|M8)\[(?P<unit>.+), (?P<tz>.+)\]
665: After function call
666:     Writing -> re.compile('(datetime64|M8)\\[(?P<unit>.+), (?P<tz>.+)\\]') 
666: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
195: Entered function with arguments [<class 'pandas.core.dtypes.dtypes.Datetime
192: Before function call
189: Accessing -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
189:     Reading -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
190: Attribute register of <pandas.core.dtypes.base.Registry object at 0x7f2add6
191: Accessing -> <class 'pandas.core.dtypes.dtypes.DatetimeTZDtype'>
191:     Reading -> <class 'pandas.core.dtypes.dtypes.DatetimeTZDtype'>
212: Entered function with arguments [<pandas.core.dtypes.base.Registry object a
201: Before function call
199: Accessing -> <class 'pandas.core.dtypes.dtypes.DatetimeTZDtype'>
199:     Reading -> <class 'pandas.core.dtypes.dtypes.DatetimeTZDtype'>
200: Accessing -> <class 'pandas.core.dtypes.base.ExtensionDtype'>
200:     Reading -> <class 'pandas.core.dtypes.base.ExtensionDtype'>
201: After function call
202: Unary Operation Not True -> False
206: Control-flow enter with condition False
211: Before function call
207: Accessing -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
207:     Reading -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
208: Attribute dtypes of <pandas.core.dtypes.base.Registry object at 0x7f2add6c6
209: Attribute append of [<class 'pandas.core.dtypes.dtypes.CategoricalDtype'>] 
210: Accessing -> <class 'pandas.core.dtypes.dtypes.DatetimeTZDtype'>
210:     Reading -> <class 'pandas.core.dtypes.dtypes.DatetimeTZDtype'>
211: After function call
212: Exiting function -> None
192: After function call
193: Accessing -> <class 'pandas.core.dtypes.dtypes.DatetimeTZDtype'>
193:     Reading -> <class 'pandas.core.dtypes.dtypes.DatetimeTZDtype'>
194: Exiting function -> <class 'pandas.core.dtypes.dtypes.DatetimeTZDtype'>
194:    Returning <class 'pandas.core.dtypes.dtypes.DatetimeTZDtype'>
856: Attribute PeriodDtypeBase of <module 'pandas._libs.tslibs.dtypes' from '/ho
857: Accessing -> <class 'pandas.core.dtypes.dtypes.PandasExtensionDtype'>
857:     Reading -> <class 'pandas.core.dtypes.dtypes.PandasExtensionDtype'>
858: Literal    value: |O08
859:     Writing -> |O08 (old: [<class 'str'>] )
859: Assignment [<class 'str'>] -> |O08
862: Before function call
860: Attribute dtype of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dyn
861: Literal    value: O
862: After function call
863:     Writing -> object (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Unde
863: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
864: Literal    value: 102
865:     Writing -> 102 (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefin
865: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
866: Literal    value: freq
867:     Writing -> ('freq',) (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_U
867: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
870: Before function call
868: Attribute compile of <module 're' from '/home/eghbalaz/.pyenv/versions/3.9.
869: Literal    value: (P|p)eriod\[(?P<freq>.+)\]
870: After function call
871:     Writing -> re.compile('(P|p)eriod\\[(?P<freq>.+)\\]') (old: [<dynapyt.u
871: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0
195: Entered function with arguments [<class 'pandas.core.dtypes.dtypes.PeriodDt
192: Before function call
189: Accessing -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
189:     Reading -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
190: Attribute register of <pandas.core.dtypes.base.Registry object at 0x7f2add6
191: Accessing -> <class 'pandas.core.dtypes.dtypes.PeriodDtype'>
191:     Reading -> <class 'pandas.core.dtypes.dtypes.PeriodDtype'>
212: Entered function with arguments [<pandas.core.dtypes.base.Registry object a
201: Before function call
199: Accessing -> <class 'pandas.core.dtypes.dtypes.PeriodDtype'>
199:     Reading -> <class 'pandas.core.dtypes.dtypes.PeriodDtype'>
200: Accessing -> <class 'pandas.core.dtypes.base.ExtensionDtype'>
200:     Reading -> <class 'pandas.core.dtypes.base.ExtensionDtype'>
201: After function call
202: Unary Operation Not True -> False
206: Control-flow enter with condition False
211: Before function call
207: Accessing -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
207:     Reading -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
208: Attribute dtypes of <pandas.core.dtypes.base.Registry object at 0x7f2add6c6
209: Attribute append of [<class 'pandas.core.dtypes.dtypes.CategoricalDtype'>, 
210: Accessing -> <class 'pandas.core.dtypes.dtypes.PeriodDtype'>
210:     Reading -> <class 'pandas.core.dtypes.dtypes.PeriodDtype'>
211: After function call
212: Exiting function -> None
192: After function call
193: Accessing -> <class 'pandas.core.dtypes.dtypes.PeriodDtype'>
193:     Reading -> <class 'pandas.core.dtypes.dtypes.PeriodDtype'>
194: Exiting function -> <class 'pandas.core.dtypes.dtypes.PeriodDtype'>
194:    Returning <class 'pandas.core.dtypes.dtypes.PeriodDtype'>
1167: Accessing -> <class 'pandas.core.dtypes.dtypes.PandasExtensionDtype'>
1167:     Reading -> <class 'pandas.core.dtypes.dtypes.PandasExtensionDtype'>
1168: Literal    value: interval
1169:     Writing -> interval (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_U
1169: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 
1170: Literal    value: |O08
1171:     Writing -> |O08 (old: [<class 'str'>] )
1171: Assignment [<class 'str'>] -> |O08
1174: Before function call
1172: Attribute dtype of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dy
1173: Literal    value: O
1174: After function call
1175:     Writing -> object (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Und
1175: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 
1176: Literal    value: 103
1177:     Writing -> 103 (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefi
1177: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 
1178: Literal    value: subtype
1179: Literal    value: closed
1180:     Writing -> ('subtype', 'closed') (old: [<dynapyt.utils.Dynapyt_Unidefi
1180: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 
1183: Before function call
1181: Attribute compile of <module 're' from '/home/eghbalaz/.pyenv/versions/3.9
1182: Literal    value: (I|i)nterval\[(?P<subtype>[^,]+)(, (?P<closed>(right|lef
1183: After function call
1184:     Writing -> re.compile('(I|i)nterval\\[(?P<subtype>[^,]+)(, (?P<closed>
1184: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 
195: Entered function with arguments [<class 'pandas.core.dtypes.dtypes.Interval
192: Before function call
189: Accessing -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
189:     Reading -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
190: Attribute register of <pandas.core.dtypes.base.Registry object at 0x7f2add6
191: Accessing -> <class 'pandas.core.dtypes.dtypes.IntervalDtype'>
191:     Reading -> <class 'pandas.core.dtypes.dtypes.IntervalDtype'>
212: Entered function with arguments [<pandas.core.dtypes.base.Registry object a
201: Before function call
199: Accessing -> <class 'pandas.core.dtypes.dtypes.IntervalDtype'>
199:     Reading -> <class 'pandas.core.dtypes.dtypes.IntervalDtype'>
200: Accessing -> <class 'pandas.core.dtypes.base.ExtensionDtype'>
200:     Reading -> <class 'pandas.core.dtypes.base.ExtensionDtype'>
201: After function call
202: Unary Operation Not True -> False
206: Control-flow enter with condition False
211: Before function call
207: Accessing -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
207:     Reading -> <pandas.core.dtypes.base.Registry object at 0x7f2add6c6430>
208: Attribute dtypes of <pandas.core.dtypes.base.Registry object at 0x7f2add6c6
209: Attribute append of [<class 'pandas.core.dtypes.dtypes.CategoricalDtype'>, 
210: Accessing -> <class 'pandas.core.dtypes.dtypes.IntervalDtype'>
210:     Reading -> <class 'pandas.core.dtypes.dtypes.IntervalDtype'>
211: After function call
212: Exiting function -> None
192: After function call
193: Accessing -> <class 'pandas.core.dtypes.dtypes.IntervalDtype'>
193:     Reading -> <class 'pandas.core.dtypes.dtypes.IntervalDtype'>
194: Exiting function -> <class 'pandas.core.dtypes.dtypes.IntervalDtype'>
194:    Returning <class 'pandas.core.dtypes.dtypes.IntervalDtype'>
1622: Literal    value: _dtype
1623:     Writing -> ('_dtype',) (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapy
1623: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 
1: Attribute DT64NS_DTYPE of <module 'pandas._libs.tslibs.conversion' from '/hom
2:     Writing -> datetime64[ns] (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapy
2: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
3: Attribute TD64NS_DTYPE of <module 'pandas._libs.tslibs.conversion' from '/hom
4:     Writing -> timedelta64[ns] (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynap
4: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
7: Before function call
5: Attribute dtype of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dynap
6: Attribute int64 of <module 'numpy' from '/home/eghbalaz/.pyenv/versions/dynap
7: After function call
8:     Writing -> int64 (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefin
8: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
9:     Writing -> None (old: [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefine
9: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
10: Attribute ensure_float64 of <module 'pandas._libs.algos' from '/home/eghbala
11:     Writing -> <built-in function ensure_float64> (old: [<dynapyt.utils.Dyna
11: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
50: Attribute ensure_int64 of <module 'pandas._libs.algos' from '/home/eghbalaz/
51:     Writing -> <built-in function ensure_int64> (old: [<dynapyt.utils.Dynapy
51: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
52: Attribute ensure_int32 of <module 'pandas._libs.algos' from '/home/eghbalaz/
53:     Writing -> <built-in function ensure_int32> (old: [<dynapyt.utils.Dynapy
53: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
54: Attribute ensure_int16 of <module 'pandas._libs.algos' from '/home/eghbalaz/
55:     Writing -> <built-in function ensure_int16> (old: [<dynapyt.utils.Dynapy
55: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
56: Attribute ensure_int8 of <module 'pandas._libs.algos' from '/home/eghbalaz/D
57:     Writing -> <built-in function ensure_int8> (old: [<dynapyt.utils.Dynapyt
57: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
58: Attribute ensure_platform_int of <module 'pandas._libs.algos' from '/home/eg
59:     Writing -> <built-in function ensure_platform_int> (old: [<dynapyt.utils
59: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
60: Attribute ensure_object of <module 'pandas._libs.algos' from '/home/eghbalaz
61:     Writing -> <built-in function ensure_object> (old: [<dynapyt.utils.Dynap
61: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x
1: Control-flow enter with condition False
2: Literal    value: 0123456789123456
3:     Writing -> 0123456789123456 (old: [<dynapyt.utils.Dynapyt_Unidefined.Dyna
3: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
66: Literal    value: True
68: Accessing -> 0123456789123456
68:     Reading -> 0123456789123456
69: Literal    value: True
215: Accessing -> 0123456789123456
215:     Reading -> 0123456789123456
307: Accessing -> 0123456789123456
307:     Reading -> 0123456789123456
308: Literal    value: True
358: Accessing -> 0123456789123456
358:     Reading -> 0123456789123456
359: Literal    value: True
1: Literal    value: parse
2: Literal    value: Version
3: Literal    value: LegacyVersion
4: Literal    value: InvalidVersion
5: Literal    value: VERSION_PATTERN
6:     Writing -> ['parse', 'Version', 'LegacyVersion', 'InvalidVersion', 'VERSI
6: Assignment [<dynapyt.utils.Dynapyt_Unidefined.Dynapyt_Undefined object at 0x7
44: Before function call
43: Accessing -> <class 'pandas.util.version.InfinityType'>
43:     Reading -> <class 'pandas.util.version.InfinityType'>
44: After function call
-1: Uncaught exception maximum recursion depth exceeded <traceback object at 0x7
-1: Uncaught exception maximum recursion depth exceeded <traceback object at 0x7
-1: Uncaught exception maximum recursion depth exceeded <traceback object at 0x7
-1: Uncaught exception maximum recursion depth exceeded <traceback object at 0x7
6: After function call
-1: Execution ended
